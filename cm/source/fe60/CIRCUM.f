      SUBROUTINE CIRCUM(NBJ,ne,NPNE,nr,NVJE,XP,ZA,ERROR,*)

C#### Subroutine: CIRCUM
C###  Description:
C###    CIRCUM calculates the centre and radius of a circle/sphere
C###    generated by a triangle/tetrahedron

!     Solve: Ax=B, set up as the following
!
!   | x2-x1 y2-y1 z2-z1 ||i|   |1/2(x2^2+ y2^2+ z2^2- x1^2- y1^2- z1^2)|
!   | x3-x1 y3-y1 z3-z1 ||j| = |1/2(x3^2+ y3^2+ z3^2- x1^2- y1^2- z1^2)|
!   | x4-x1 y4-y1 z4-z1 ||k|   |1/2(x4^2+ y4^2+ z4^2- x1^2- y1^2- z1^2)|
!
!     Where i,j,k are the x,y,z positions for the circumball centre.
!     x1,x2,x3 etc are nodal coordinates of the triangle/tet

      IMPLICIT NONE
      INCLUDE 'geom00.cmn'
      INCLUDE 'loc00.cmn'
      INCLUDE 'loc00.inc'
      INCLUDE 'tol00.cmn'
!     Parameter list
      INTEGER NBJ(NJM,NEM),ne,NPNE(NNM,NBFM,NEM),nr,
     '  NVJE(NNM,NBFM,NJM,NEM)
      REAL*8 XP(NKM,NVM,NJM,NPM),ZA(NAM,NHM,NCM,NEM)
!     Local variables
      CHARACTER ERROR*(*)
      INTEGER nn,INFO,IPIV(3),nj,np1,npi,nv1,nvi,nb,njj
      REAL*8 A(3,3),B(3),RSQ,SQ,DET,VOL
      REAL*8 ONESIXTH
      PARAMETER(ONESIXTH=0.16666666666666666667D0)

      CALL ENTERS('CIRCUM',*9999)

      nb=NBJ(1,ne)

!     Find x1^2+y1^2+z1^2
      SQ=0.d0
      np1=NPNE(1,nb,ne)
      nv1=NVJE(1,nb,1,ne)
      DO njj=1,NJ_LOC(NJL_GEOM,0,nr)
        nj=NJ_LOC(NJL_GEOM,njj,nr)
        SQ=SQ+XP(1,nv1,nj,np1)**2.d0
      ENDDO

!     Load A and B
      DO nn=1,NNT(nb)-1
        B(nn)=0.d0
        npi=NPNE(nn+1,nb,ne)
        nvi=NVJE(nn+1,nb,1,ne)
        DO njj=1,NJ_LOC(NJL_GEOM,0,nr)
          nj=NJ_LOC(NJL_GEOM,njj,nr)
          A(nn,njj)=XP(1,nvi,nj,npi)-XP(1,nv1,nj,np1)
          B(nn)=B(nn)+XP(1,nvi,nj,npi)**2.d0
        ENDDO
        B(nn)=0.5d0*(B(nn)-SQ)
      ENDDO

      IF(NJ_LOC(NJL_GEOM,0,nr).EQ.3) THEN
        VOL=DABS(ONESIXTH*DET(A))
      ELSEIF(NJ_LOC(NJL_GEOM,0,nr).EQ.2) THEN
        VOL=DABS(0.5d0*(A(1,1)*A(2,2)-A(1,2)*A(2,1)))
      ENDIF
     
      IF(VOL.GT.ZERO_TOL) THEN
        IF(NJ_LOC(NJL_GEOM,0,nr).EQ.3) THEN
          CALL FSOLV3V(A,B,ERROR,*9999)
        ELSEIF(NJ_LOC(NJL_GEOM,0,nr).EQ.2) THEN
          CALL DGETRF(NJ_LOC(NJL_GEOM,0,nr),NJ_LOC(NJL_GEOM,0,nr),
     '      A,3,IPIV,INFO)
          IF(INFO.NE.0) THEN
            IF(INFO.LT.0) THEN
              WRITE(ERROR,'(I1,''th argument had an error'')') INFO
              GOTO 9999
            ELSEIF(INFO.GT.0) THEN
              WRITE(ERROR,'(''U('',I1,'','',I1,'') is zero'')')
     '          INFO,INFO
              GOTO 9999
            ENDIF
          ENDIF
          CALL DGETRS('N',NJ_LOC(NJL_GEOM,0,nr),1,A,3,IPIV,B,3,INFO)
          IF(INFO.NE.0) THEN
            IF(INFO.LT.0) THEN
              WRITE(ERROR,'(I1,''th argument had an error'')') INFO
              GOTO 9999
            ENDIF
          ENDIF
        ENDIF

!       Have centre, calculate the radius squared
        RSQ=0.d0
        DO njj=1,NJ_LOC(NJL_GEOM,0,nr)
          nj=NJ_LOC(NJL_GEOM,njj,nr)
          RSQ=RSQ+(B(njj)-XP(1,nv1,nj,np1))**2.d0
        ENDDO
        
!       Load ZA with circumball data
        DO njj=1,NJ_LOC(NJL_GEOM,0,nr)
          ZA(1,njj,1,ne)=B(njj)
        ENDDO
        ZA(1,NJ_LOC(NJL_GEOM,0,nr)+1,1,ne)=RSQ

      ELSE !Zero Volume
        DO njj=1,NJ_LOC(NJL_GEOM,0,nr)
          nj=NJ_LOC(NJL_GEOM,njj,nr)
          ZA(1,njj,1,ne)=0.d0
          DO nn=1,NNT(nb)
            nvi=NVJE(nn,nb,1,ne)
            npi=NPNE(nn,nb,ne)
            ZA(1,njj,1,ne)=ZA(1,njj,1,ne)+XP(1,nvi,nj,npi)
          ENDDO
          ZA(1,njj,1,ne)=0.25d0*ZA(1,njj,1,ne)
        ENDDO
        ZA(1,NJ_LOC(NJL_GEOM,0,nr)+1,1,ne)=0.d0
      ENDIF
      
      CALL EXITS('CIRCUM')
      RETURN
 9999 CALL ERRORS('CIRCUM',ERROR)
      CALL EXITS('CIRCUM')
      RETURN 1
      END


