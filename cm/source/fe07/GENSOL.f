      SUBROUTINE GENSOL(CELL_ICQS_VALUE,DIPOLE_CEN_NTIME,
     '  DIPOLE_DIR_NTIME,IBT,ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,
     '  IRCQS_SPATIAL,INP,ISC_GD,ISC_GK,ISC_GKK,ISC_GM,ISC_GMM,ISC_GQ,
     '  ISR_GD,ISR_GK,ISR_GKK,ISR_GM,ISR_GMM,ISR_GQ,ISEG,ISELNO,ISFIBR,
     '  ISFIEL,ISLINE,ISLINO,ISNONO,ISTATE,IUSER,IWK,LGE,MXI,NAN,
     '  NAQ,NBH,NBHF,NBJ,NBJF,NDET,NDIPOLES,NEELEM,NELIST,NENFVC,NENP,
     &  NENQ,NLATNE,NLATNQ,NLATPNQ,NQNLAT,NEP,NFF,NFFACE,NFVC,NGAP,NHE,
     &  NHP,NHQ,NKB,NKEF,NKH,NKHE,NKJE,NLL,NLLIST,NLQ,NMNO,NNB,NNF,
     &  NODENVC,NODENVCB,NONY,NORD,NPB,NP_INTERFACE,NPF,NPL,NPLIST,
     &  NPLIST2,NPNE,NPNODE,NPNY,NQET,NQGP,NQGP_PIVOT,NQGW,NQLIST,NQNE,
     &  NQNP,NQNY,NQS,NQSCNB,NQXI,NRLIST,NRLIST2,NRE,NSB,NTIME_INTERP,
     &  NTIME_POINTS,NTIME_NR,NTIW,NVCB,NVCNODE,NVHE,NVHP,NVJE,NVJP,NW,
     &  NWQ,nx,NXI,NXLIST,NXQ,NYNE,NYNO,NYNP,NYNQ,NYNR,NYQNR,TV_BC_SET,
     &  Z_CONT_LIST,ACINUS,ALPHA,AQ,BBM,CE,CELL_RCQS_VALUE,CG,CGE,CONY,
     &  CP,CQ,CURVCORRECT,CYNO,DET,DIPOLE_CEN,DIPOLE_DIR,DL,DNUDXQ,
     '  DRDN,DRDNO,DXDXIQ,DXDXIQ2,ED,EIGVAL,EIGVEC,EM,ER,ERRMAX,ES,FEXT,
     &  GCHQ,GD,GK,GK2,GK3,GKK,GM,GMM,GQ,GQ2,GQ3,GR,GRR,GUQ,PAOPTI,PG,
     &  PMIN,PMAX,PROPQ,R,RAD,RCQS,RCQS_SPATIAL,RD,RE1,RESID,RESJAC,RG,
     &  RHS,SE,TIME_VALUES,USER,VC,VC_INIT,WARM_START,WG,XA,
     &  XAB,XC,XE,XG,XG1,XIG,XIP,XIQ,XN,XNFV,XN_GRAD,XO,XP,XQ,XR,
     &  XR_GRAD,YG,YGF,YP,YQ,YQS,ZA,ZA1,Z_CONT,ZE,ZE1,ZG,ZNFV,ZP,ZP1,
     &  CSEG,FIX,FIXQ,ITER8,ERROR,*)

C#### Subroutine: GENSOL
C###  Description:
C###    GENSOL calls solution routines.

c cpb 18/5/95 Old work arrays for DPB's GMRES solver
CC#### Variable: IWK_GMRES(iwk_gmres_mx)
CC###  Description:
CC###    IWK_GMRES is the integer work array for the GMRES
CC###    solver. It is partitioned as follows:
CC###    IWK1_GMRES(nz_gmres_mx)
CC###    IWK2_GMRES(nomx)
CC###    FILLIN_GMRES(nomx)
CC###    IS_PRECON_GMRES(nomx+1+nz_gmres_mx)
CC###    IPIVOT_GMRES(nom)

CC#### Variable: WK_GMRES(wk_gmres_mx)
CC###  Description:
CC###    WK_GMRES is the real*8 work array for the GMRES
CC###    solver. It is partitioned as follows:
CC###    WK1_GMRES(nomx)
CC###    WK2_GMRES(nomx)
CC###    WK3_GMRES(nomx)
CC###    PRECON_GMRES(nz_gmres_mx)
CC###    ORTHOG_GMRES(nomx,n_gmres_orthog_mx)
CC###    QR_GMRES(n_gmres_orthog_mx+1,n_gmres_orthog_mx+1)
CC###    C_GMRES(n_gmres_orthog_mx+1)
CC###    S_GMRES(n_gmres_orthog_mx+1)
CC###    G_GMRES(n_gmres_orthog_mx+1)
CC###    Y_GMRES(n_gmres_orthog_mx+1)

      IMPLICIT NONE
      INCLUDE 'b12.cmn'
      INCLUDE 'cbdi02.cmn'
      INCLUDE 'coup00.cmn'
      INCLUDE 'gen000.cmn'
      INCLUDE 'geom00.cmn'
      INCLUDE 'grid00.cmn'
      INCLUDE 'ityp00.cmn'
      INCLUDE 'ktyp00.cmn'
      INCLUDE 'ktyp30.cmn'
      INCLUDE 'ktyp50.cmn'
      INCLUDE 'ktyp90.cmn'
      INCLUDE 'lung00.cmn'
      INCLUDE 'mach00.inc'
      INCLUDE 'mxch.inc'
      INCLUDE 'ptr00.cmn'
      INCLUDE 'quas00.cmn'
      INCLUDE 'solv00.cmn'

!     Parameter List
      INTEGER CELL_ICQS_VALUE(NQIM,NQVM),
     '  DIPOLE_CEN_NTIME(NDIPOLEM,NRM,NXM),
     '  DIPOLE_DIR_NTIME(NDIPOLEM,NRM,NXM),IBT(3,NIM,NBFM),ICQS(NQIM),
     '  ICQS_SPATIAL(NQISVM,NQM),IDO(NKM,NNM,0:NIM,NBFM),
     '  IICQS_SPATIAL(0:NQISVM,NQVM),IRCQS_SPATIAL(0:NQRSVM,NQVM),
     '  INP(NNM,NIM,NBFM),ISC_GD(NISC_GDM),ISC_GK(NISC_GKM),
     '  ISC_GKK(NISC_GKKM,NXM),ISC_GM(NISC_GMM),ISC_GMM(NISC_GMMM),
     '  ISC_GQ(NISC_GQM),ISR_GD(NISR_GDM),ISR_GK(NISR_GKM),
     '  ISR_GKK(NISR_GKKM,NXM),ISR_GM(NISR_GMM),ISR_GMM(NISR_GMMM),
     '  ISR_GQ(NISR_GQM),ISEG(*),ISELNO(NWM,NEM),
     '  ISFIBR(NWM,NEM,NGRSEGM),ISFIEL(NWM,NEM),ISLINE(NWM,2*NGRSEGM),
     '  ISLINO(NWM),ISNONO(NWM,NPM),ISTATE(*),IUSER(*),IWK(*),
     '  LGE(NHM*NSM,NRCM),MXI(2,NEM),NAN(NIM,NAM,NBFM),NAQ(NQM,NAM),
     '  NLQ(NQM),NBH(NHM,NCM,NEM),NBHF(NHM,NCM,NFM),NBJ(NJM,NEM),
     '  NBJF(NJM,NFM),NDET(NBFM,0:NNM),NDIPOLES(NRM,NXM),
     '  NEELEM(0:NE_R_M,0:NRM),NELIST(0:NEM),
     '  NENFVC(0:NFVCM,NFVM),NENP(NPM,0:NEPM,0:NRM),NENQ(0:8,NQM),
     '  NLATNE(NEQM+1),NLATNQ(NEQM*NQEM),NLATPNQ(NQM),
     '  NQNLAT(NEQM*NQEM),NEP(NPM),NFF(6,NEM),
     '  NFFACE(0:NF_R_M,NRM),NFVC(2,0:NFVCM,NVCM),NGAP(NIM,NBM),
     '  NHE(NEM,NXM),NHP(NPM,0:NRM,NXM),NHQ(NRM,NXM),
     '  NKB(2,2,2,NNM,NBFM),NKEF(0:4,16,6,NBFM),NKH(NHM,NPM,NCM,0:NRM),
     '  NKHE(NKM,NNM,NHM,NEM),NKJE(NKM,NNM,NJM,NEM),
     '  NLL(12,NEM),NLLIST(0:NLM),NMNO(1:2,0:NOPM,NXM),NNB(4,4,4,NBFM),
     '  NNF(0:17,6,NBFM),NODENVC(NVCM),NODENVCB(NVCBM),
     '  NONY(0:NOYM,NYM,NRCM,0:NRM,NXM),NORD(5,NE_R_M),NPB(0:NP_R_M,5),
     '  NP_INTERFACE(0:NPM,0:3),NPF(9,NFM),NPL(5,0:3,NLM),NPLIST(0:NPM),
     '  NPLIST2(0:NPM),NPNE(NNM,NBFM,NEM),NPNODE(0:NP_R_M,0:NRM),
     '  NPNY(0:6,NYM,0:NRCM,NXM),NQET(NQSCM),NQGP(0:NQGM,NQM),
     '  NQGP_PIVOT(NQGM,NQM),NQLIST(0:NQM),NQNE(NEQM,NQEM),NQNP(NPM),
     '  NQNY(2,NYQM,0:NRCM,NXM),NQS(NEQM),NQSCNB(NQSCM),
     '  NQXI(0:NIM,NQSCM),NRLIST(0:NRM),NRLIST2(0:NRM),
     '  NRE(NEM),NSB(NKM,NNM,NBFM),NTIME_INTERP(NTIMEVARSM),
     '  NTIME_POINTS(NTIMEVARSM),NTIME_NR(0:NTIMEVARSM,NRM),
     &  NVCB(-1:3,NVCBM),NVCNODE(2,NP_R_M),NVHE(NNM,NBFM,NHM,NEM),
     '  NVHP(NHM,NPM,NCM,0:NRM),NVJE(NNM,NBFM,NJM,NEM),NVJP(NJM,NPM),
     &  NW(NEM,3),
     '  NWQ(8,0:NQM,NAM),nx,NXI(-NIM:NIM,0:NEIM,0:NEM),NXLIST(0:NXM),
     '  NXQ(-NIM:NIM,0:4,0:NQM,NAM),NYNE(NAM,NHM,0:NRCM,NCM,NEM),
     '  NYNO(0:NYOM,NOOPM,NRCM,0:NRM,NXM),
     '  NYNP(NKM,NVM,NHM,NPM,0:NRCM,NCM,NRM),NYNQ(NHM,NQM,0:NRCM,NXM),
     '  NYNR(0:NY_R_M,0:NRCM,NCM,0:NRM,NXM),
     '  NYQNR(0:NYQM,0:NRCM,NCM,0:NRM,NXM),TV_BC_SET(0:NIQSM,0:NQM),
     '  Z_CONT_LIST(NDM,2,7)
      REAL*8 ACINUS(4,NEM),ALPHA,AQ(NMAQM,NQM),BBM(2,NEM),
     &  CE(NMM,NEM,NXM),CELL_RCQS_VALUE(NQRM,NQVM),CG(NMM,NGM),
     &  CGE(NMM,NGM,NEM,NXM),CONY(0:NOYM,NYM,NRCM,0:NRM,NXM),
     &  CP(NMM,NPM,NXM),CQ(NMM,NQM,NXM),CURVCORRECT(2,2,NNM,NEM),
     &  CYNO(0:NYOM,NOOPM,NRCM,0:NRM,NXM),DET(NBFM,0:NNM,NGM,6),
     &  DIPOLE_CEN(4,0:NDIPTIMM,NDIPOLEM,NRM,NXM),
     &  DIPOLE_DIR(4,0:NDIPTIMM,NDIPOLEM,NRM,NXM),DL(3,NLM),
     &  DNUDXQ(3,3,NQM),DRDN(NGM),DRDNO(NGM,NKM),
     &  DXDXIQ(3,3,NQM),
     &  DXDXIQ2(3,3,NQM),ED(NHM*NSM,NHM*NSM),
     &  EIGVAL(NTM,2),EIGVEC(NOM,NTM,2),EM(NHM*NSM,NHM*NSM),ER(NHM*NSM),
     &  ERRMAX,ES(NHM*NSM,NHM*NSM),FEXT(NIFEXTM,NGM,NEM),GCHQ(3,NQM),
     '  GD(NZ_GD_M),GK(NZ_GK_M),GK2(*),GK3(*),GKK(NZ_GKK_M,NXM),
     &  GM(NZ_GM_M),GMM(NZ_GMM_M),GQ(NZ_GQ_M),GQ2(*),GQ3(*),GR(NYROWM),
     &  GRR(NOM),GUQ(3,3,NQM),NQGW(NQGM,NQM),PAOPTI(*),PG(NSM,NUM,NGM,
     &  NBM),PMIN(*),PMAX(*),PROPQ(3,3,4,2,NQM,NXM),R(NOPM,*),RAD(NGM),
     &  RCQS(NQRM),RCQS_SPATIAL(NQRSVM,NQM),RD(NGM),RE1(NSM,NHM),
     &  RESID(*),RESJAC(NREM,*),RG(NGM),RHS(NQM),
     &  SE(NSM,NBFM,NEM),
     &  TIME_VALUES(2,0:NTIMEPOINTSM+1,NTIMEVARSM),USER(*),VC(0:NVCM),
     &  VC_INIT(2,NVCM),WG(NGM,NBM),XA(NAM,NJM,NEM),XAB(NORM,NEM),XC(*),
     &  XE(NSM,NJM),XG(NJM,NUM),XG1(NJM,NUM,NGM),XIG(NIM,NGM,NBM),
     &  XIP(NIM,NPM),XIQ(NIM,NQM),XN(NJM,NGM),XNFV(-(NJM+1):NJM,NFVM),
     &  XN_GRAD(NJM,NGM),XO(NOM,NXM),XP(NKM,NVM,NJM,NPM),XQ(NJM,NQM),
     &  XR(NJM,NGM),XR_GRAD(NJM,NGM),YG(NIYGM,NGM,NEM),
     &  YGF(NIYGFM,NGFM,NFM),YP(NYM,NIYM,NXM),YQ(NYQM,NIQM,NAM,NXM),
     &  YQS(NIQSM,NQM),ZA(NAM,NHM,NCM,NEM),ZA1(NAM,NHM,NCM,NEM),
     &  Z_CONT(NDM,2,67),ZE(NSM,NHM),ZE1(NSM,NHM),ZG(NHM,NUM),
     &  ZNFV(NFVM),ZP(NKM,NVM,NHM,NPM,NCM),
     &  ZP1(NKM,NVM,NHM,NPM,NCM)
      CHARACTER CSEG(*)*(*),ERROR*(*)
      LOGICAL FIX(NYM,NIYFIXM,NXM),FIXQ(NYQM,NIYFIXM,NXM),ITER8,
     '  WARM_START
!     Local Variables
      INTEGER nonrlist,nonxlist,NTIW,nr,nr_flow,nr_mech,nx_flow,nx_mech
c cpb 18/5/95 Offsets for the old ITERATIVE solver
C      INTEGER OS_IWK1_GMRES,OS_IWK2_GMRES,OS_FILLIN_GMRES,
C     '  OS_IS_PRECON_GMRES,OS_IPIVOT_GMRES,OS_WK1_GMRES,OS_WK2_GMRES,
C     '  OS_WK3_GMRES,OS_PRECON_GMRES,OS_ORTHOG_GMRES,OS_QR_GMRES,
C     '  OS_C_GMRES,OS_S_GMRES,OS_G_GMRES,OS_Y_GMRES
      REAL*8 T1_FLOWMECH,TIME_FLOWMECH
      INTEGER*4 BC_POINTS_PTR,BRANCH_PTR,CONECT_PTR,CALCULATED_PTR,
     '  GK2_PTR,NO_NE_PTR,NY_OFST_PTR,NZ_ESED_PTR,STACK_ED_PTR,
     &  STACK_EM_PTR,STACK_ES_PTR,WORK_PTR
      LOGICAL DYNAM2,FIRST_A,UPDATE_MATRIX

C DPN May 1999 - RHS routines for cellular modelling
      EXTERNAL HH_CELL,LR_CELL,NOBLE98_CELL
      EXTERNAL HMT_CELL,HMT_SPM_CELL,JRW_CELL
      EXTERNAL BR,CUBIC,FHN,VCD,NOBLE98_HMT_CELL
      EXTERNAL METABOLISM_CELL
      EXTERNAL USER_CELL1,USER_CELL2,USER_CELL3,USER_CELL4,USER_CELL5
      ! Dummy for use with CellML models
      EXTERNAL CELLML_DUMMY_ROUTINE

      CALL ENTERS('GENSOL',*9999)
      
C cpb 18/5/95 Old GMRES solver offsets
C        OS_IWK1_GMRES=1
C        OS_IWK2_GMRES=OS_IWK1_GMRES+NZ_GMRES_M
C        OS_FILLIN_GMRES=OS_IWK2_GMRES+NOM
C        OS_IS_PRECON_GMRES=OS_FILLIN_GMRES+NOM
C        OS_IPIVOT_GMRES=OS_IS_PRECON_GMRES+NOM+1+NZ_GMRES_M
C        OS_WK1_GMRES=1
C        OS_WK2_GMRES=OS_WK1_GMRES+NOM
C        OS_WK3_GMRES=OS_WK2_GMRES+NOM
C        OS_PRECON_GMRES=OS_WK3_GMRES+NOM
C        OS_ORTHOG_GMRES=OS_PRECON_GMRES+NZ_GMRES_M
C        OS_QR_GMRES=OS_ORTHOG_GMRES+NOM*N_GMRES_ORTHOG_M
C        OS_C_GMRES=OS_QR_GMRES+(N_GMRES_ORTHOG_M+1)*(N_GMRES_ORTHOG_M+1)
C        OS_S_GMRES=OS_C_GMRES+N_GMRES_ORTHOG_M+1
C        OS_G_GMRES=OS_S_GMRES+N_GMRES_ORTHOG_M+1
C        OS_Y_GMRES=OS_G_GMRES+N_GMRES_ORTHOG_M+1

      IF(IS_COUPLED(nx)) THEN
        !Coupled prob solved simult.ly for all regions

        IF(COUPLED_QUASI) THEN
          CALL MARCH6(DIPOLE_CEN_NTIME,DIPOLE_DIR_NTIME,IBT,IDO,INP,
     '      ISC_GK,ISC_GKK(1,nx),ISC_GQ,ISR_GK,ISR_GKK(1,nx),ISR_GQ,LGE,
     '      NBH,NBJ,NDET,NDIPOLES,NEELEM,NENP,NGAP,NHE(1,nx),
     '      NHP(1,0,nx),NHQ(1,nx),NKH,NKHE,NKJE,NLL,NONY(0,1,1,0,nx),
     '      NORD,NPB,NPF,NP_INTERFACE,NPNE,NPNODE,NPNY(0,1,0,nx),
     '      NQNY(1,1,0,nx),0,NRE,NRLIST,NRLIST2,NVHE,NVHP,NVJE,NW,nx,
     '      NYNE,NYNO(0,1,1,0,nx),NYNP,NYNR(0,0,1,0,nx),
     '      NYQNR(0,0,1,0,nx),CE(1,1,nx),CGE(1,1,1,nx),CONY(0,1,1,0,nx),
     '      CP(1,1,nx),CURVCORRECT,CYNO(0,1,1,0,nx),DET,DIPOLE_CEN,
     '      DIPOLE_DIR,DL,DRDN,DRDNO,GD,GK,GKK(1,nx),GQ,GR,GRR,PG,RAD,
     '      RD,RG,SE,WG,XA,XE,XG,XG1,XIG,XN,XN_GRAD,XO(1,nx),XP,XR,
     '      XR_GRAD,YG,YP(1,1,nx),YQ(1,1,1,nx),YQS,ZA,ZP,FIX(1,1,nx),
     '      ERROR,*9999)
        ELSE

          nr=NRLIST(1) !temporary for ITYP5 and ITYP6
C NEWS JHC 25/06/05 Combine NONLIN_CONT with NONLIN
C JWF 16/08/04 Contact mechanics option for multiple regions (nr>1 coupled)
C          IF(ITYP5(nr,nx).EQ.1.AND. !problem is static
C     &      KTYP5G(nr).GE.1) THEN !contact mechanics problem
C            CALL NONLIN_CONT(AUGMENT,IBT,IDO,INP,ISC_GK,
C     &        ISC_GKK,ISC_GQ,ISR_GK,ISR_GKK,ISR_GQ,LGE,NAN,NBH,
C     &        NBHF,NBJ,NBJF,NEELEM,NELIST,NENP,NFF,NFFACE,NGAP,
C     &        NHE,NHP,NKB,NKEF,NKH,NKHE,NKJE,NMNO,NNB,NNF,NONY,
C     &        NORD,NPF,NP_INTERFACE,NPNE,NPNODE,NPNY,0,
C     &        NRE,NRLIST,NSB,NVHE,NVHP,NVJE,NW,nx,NXI,NYNE,NYNO,
C     &        NYNP,NYNR,Z_CONT_LIST,CE,CG,CGE,CONT_STIFF,CONY,CP,
C     &        CURVCORRECT,CYNO,D_RE,D_RI3,D_TG,D_ZG,ERRMAX,ES,FEXT,
C     &        GK,GKK,GQ,GR,GRR,PG,RE1,RE2,RG,SE,TIED_STIFF,WG,XA,XE,
C     &        XG,XO,XP,YG,YGF,YP,ZA,ZA1,Z_CONT,ZE,ZE1,ZG,ZG1,ZP,ZP1,
C     &        FIX,ERROR,*9999)
C          ELSE IF(ITYP5(nr,nx).EQ.1.AND. !problem is static
C NEWE JHC
          IF(ITYP5(nr,nx).EQ.1.AND. !problem is static
     '      ITYP6(nr,nx).EQ.2) THEN !problem is nonlinear
            CALL NONLIN(IBT,IDO,INP,ISEG,ISELNO,ISFIBR,ISFIEL,
     '        ISC_GK,ISC_GKK(1,nx),ISC_GQ,ISR_GK,ISR_GKK(1,nx),
     '        ISR_GQ,ISLINE,ISLINO,ISNONO,ISTATE,IUSER,IWK,
     '        LGE,MXI,NAN,NBH,NBHF,NBJ,NBJF,NEELEM,NENP,NFF,
     '        NFFACE,NGAP,NHE(1,nx),NHP(1,0,nx),NKB,NKEF,
     '        NKH,NKHE,NKJE,NLATNE,NLL,NLLIST,NMNO(1,0,nx),NNB,NNF,
     '        NONY(0,1,1,0,nx),NPF,NP_INTERFACE,NPL,NPNE,NPNODE,
     '        NPNY(0,1,0,nx),NQNE,NQNLAT,
     '        NQS,NQXI,0,NRE,NRLIST,NSB,
     '        NTIW,NVHE,NVHP,NVJE,NW,nx,NXI,NYNE,NYNO(0,1,1,0,nx),
     '        NYNP,NYNR(0,0,1,0,nx),Z_CONT_LIST,
     '        CE(1,1,nx),CG,CGE(1,1,1,nx),
     '        CONY(0,1,1,0,nx),CP(1,1,nx),CURVCORRECT,
     '        CYNO(0,1,1,0,nx),DL,ERRMAX,
     '        FEXT,GK,GKK(1,nx),GQ,GR,GRR,PAOPTI,PG,PMIN,PMAX,R,
     '        RE1,RESID,RESJAC,RG,SE,USER,WARM_START,WG,
     '        XA,XC,XE,XG,XO(1,nx),XP,XQ,YG,YGF,YP(1,1,nx),
     '        YQ(1,1,1,nx),ZA,ZA1,Z_CONT,ZE,ZE1,ZP,ZP1,CSEG,
     '        FIX(1,1,nx),ERROR,*9999)
          ELSE
            UPDATE_MATRIX=.NOT.ASSEMBLE_SOLUTION(0,nx)
            CALL SOLVE9(ISC_GK,ISC_GKK(1,nx),ISC_GQ,
     '        ISR_GK,ISR_GKK(1,nx),ISR_GQ,LGE,NBH,NENP,NHE,
     '        NDIPOLES,NONY(0,1,1,0,nx),NP_INTERFACE,NPNE,
     '        NPNY(0,1,0,nx),NRE,NVHE,nx,NYNE,NYNO(0,1,1,0,nx),
     '        NYNP,NYNR(0,0,1,0,nx),CONY(0,1,1,0,nx),CYNO(0,1,1,0,nx),
     '        GD,GK,GKK(1,nx),GQ,GR,GRR,XO(1,nx),YP(1,1,nx),
     '        FIRSTS(nx),FIX(1,1,nx),UPDATE_MATRIX,.TRUE.,.TRUE.,
     '        ERROR,*9999)
          ENDIF
        ENDIF

        ASSEMBLE_SOLUTION(0,nx)=.TRUE.

      ELSE IF(KTYP90.EQ.9) THEN !Coupled flow mechanics
C NPS  20/9/97 moved coupled flow mechanics outside region loop
C this option iteratives between mechanics solutions and flow
C though elastic tubes
        DO nonrlist=1,NRLIST(0)
          DO nonxlist=1,NXLIST(0)
            IF(ITYP2(nonrlist,nonxlist).eq.5) THEN !Navier Stokes
              nr_flow=nonrlist
              nx_flow=nonxlist
            ENDIF
            IF(ITYP2(nonrlist,nonxlist).eq.2) THEN !Finite elasticity
              nr_mech=nonrlist
              nx_mech=nonxlist
            ENDIF
          ENDDO
        ENDDO
C detremines the flow and mechanics regions and promblem classes

        NRLIST(0)=1
        NRLIST(1)=nr_mech !only one region in the mechanics
        T1_FLOWMECH=T1
        T1_FLOWMECH=T1_FLOWMECH
        TIME_FLOWMECH=T0

c        DO WHILE (TIME_FLOWMECH.LT.T1_FLOWMECH)

          IF(.NOT.FLOW_MECH_INIT) THEN

          CALL NONLIN(IBT,IDO,INP,ISEG,ISELNO,ISFIBR,ISFIEL,
     '      ISC_GK,ISC_GKK(1,nx_mech),ISC_GQ,ISR_GK,ISR_GKK(1,nx_mech),
     '      ISR_GQ,ISLINE,ISLINO,ISNONO,ISTATE,IUSER,IWK,LGE,MXI,
     '      NAN,NBH,NBHF,NBJ,NBJF,NEELEM,NENP,NFF,NFFACE,NGAP,
     '      NHE(1,nx_mech),NHP(1,0,nx_mech),NKB,NKEF,
     '      NKH,NKHE,NKJE,NLATNE,NLL,NLLIST,NMNO(1,0,nx_mech),NNB,NNF,
     '      NONY(0,1,1,0,nx_mech),NPF,NP_INTERFACE,NPL,NPNE,NPNODE,
     '      NPNY(0,1,0,nx_mech),NQNE,NQNLAT,NQS,NQXI,nr_mech,NRE,
     '      NRLIST,NSB,NTIW,NVHE,NVHP,NVJE,NW,nx_mech,NXI,NYNE,
     '      NYNO(0,1,1,0,nx_mech),NYNP,NYNR(0,0,1,0,nx_mech),
     '      Z_CONT_LIST,CE(1,1,nx_mech),CG,CGE(1,1,1,nx_mech),
     '      CONY(0,1,1,0,nx_mech),CP(1,1,nx_mech),
     '      CURVCORRECT,CYNO(0,1,1,0,nx_mech),DL,
     '      ERRMAX,FEXT,GK,GKK(1,nx_mech),GQ,GR,GRR,PAOPTI,PG,
     '      PMIN,PMAX,R,RE1,RESID,RESJAC,RG,SE,USER,
     '      WARM_START,WG,XA,XC,XE,XG,
     '      XO(1,nx_mech),XP,XQ,YG,YGF,YP(1,1,nx_mech),
     '      YQ(1,1,1,nx_mech),ZA,ZA1,Z_CONT,ZE,ZE1,ZP,ZP1,CSEG,
     '      FIX(1,1,nx_mech),ERROR,*9999)
          ENDIF

C calls mechaincs solution routine

          CALL MECH_FLOW(IBT,IDO,INP,NAN,NBH,NBJ,
     '      NEELEM,NENQ,NEP,NHE,NHP,NKH,NKHE,NKJE,
     '      NPF,NPNE,NPNODE,NQNE,NQS,NQXI,nr_mech,nr_flow,NVHE,NVHP,
     '      NVJE,NW,nx_flow,nx_mech,
     '      NYNE,NYNP,NYNQ,CE,CG,CGE,CP,CQ(1,1,nx_flow)
     '      ,CURVCORRECT,FEXT,PG,RG,SE,XA,
     '      XIP,XP,XQ,YG,YP,YQ,ZA,ZP,ERROR,*9999)
C evaluates transmural stress

          T0=TIME_FLOWMECH
          T1=TIME_FLOWMECH+(FLOW_STEPS*TINCR)
          CONECT_PTR=0
          CALCULATED_PTR=0
          BC_POINTS_PTR=0
          BRANCH_PTR=0
          CALL ALLOCATE_MEMORY(3*3*NQM,0,INTTYPE,CONECT_PTR,.TRUE.,
     '      ERROR,*9999)
          CALL ALLOCATE_MEMORY((NQM+1)*3*3,0,INTTYPE,
     '      BC_POINTS_PTR,.TRUE.,ERROR,*9999)
          CALL ALLOCATE_MEMORY(NQM,0,LOGTYPE,BRANCH_PTR,.TRUE.,
     '      ERROR,*9999)
          CALL ALLOCATE_MEMORY(NQM,0,LOGTYPE,CALCULATED_PTR,.TRUE.,
     '      ERROR,*9999)

         CALL MARCH4(%VAL(BC_POINTS_PTR),%VAL(BRANCH_PTR),
     '      %VAL(CALCULATED_PTR),%VAL(CONECT_PTR),CQ(1,1,nx_flow),
     '      ER,ES,GKK(1,nx_flow),GRR,ISC_GKK(1,nx_flow),
     '      ISR_GKK(1,nx_flow),LGE,NBJ,NEELEM,NENQ,NHQ(1,nx_flow),
     '      NPNE,NQNE,NQS,nr_flow,nx_flow,NXQ,NYNQ(1,1,0,nx_flow),
     '      NYQNR(0,0,1,0,nx_flow),XP,XIP,XQ,YQ(1,1,1,nx_flow),
     '      TIME_VALUES,NTIME_POINTS,NTIME_NR,ERROR,*9999)

C calls flow solution routine
          CALL FREE_MEMORY(CALCULATED_PTR,ERROR,*9999)
          CALL FREE_MEMORY(CONECT_PTR,ERROR,*9999)
          CALL FREE_MEMORY(BRANCH_PTR,ERROR,*9999)
          CALL FREE_MEMORY(BC_POINTS_PTR,ERROR,*9999)
          TIME_FLOWMECH=TIME_FLOWMECH+(FLOW_STEPS*TINCR)
c        ENDDO

C MLB 22 Aug 1996 Moved outside region loop, regions solved at
C lower level
C SGM 26Oct2000 grid-based Finite element also
C MLT 29Nov02 Grid Finite Volume also
      ELSE IF(ITYP5(NRLIST(1),nx).EQ.2.AND.
     '      (ITYP4(NRLIST(1),nx).EQ.4.OR.ITYP4(NRLIST(1),nx).EQ.6.OR.
     '       ITYP4(NRLIST(1),nx).EQ.7).AND.
     '  ITYP2(NRLIST(1),nx).EQ.9) THEN !cellular based/collocation, grid-based FE or grid FV/timedep

        IF(ITYP19(NRLIST(1),nx).EQ.1) THEN !electrical
          IF(ITYP3(NRLIST(1),nx).EQ.1) THEN !Cubic
            IF(SOLVE_ACTIV) THEN
              CALL MARCH8_COUPLED(%VAL(INTEGRATOR_IWORK_PTR),
     '          CELL_ICQS_VALUE,IBT,ICQS,ICQS_SPATIAL,IDO,
     '          IICQS_SPATIAL,IRCQS_SPATIAL,INP,ISC_GKK,ISR_GKK,
     '          NBH,NBJ,NEELEM,NENQ,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,NHE,NHP,NKHE,NKH,NLQ,NPF,
     '          NPNE,NP_INTERFACE,NPLIST,NPNODE,NQGP,NQGP_PIVOT,NQLIST,
     '          NQNP,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          %VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GK,
     '          GK2,GK3,GKK,GM,GQ,GQ2,GQ3,GUQ,NQGW,
     '          PG,PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,SE,
     '          TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,
     '          CUBIC,ERROR,*9999)
            ELSE
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '          NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,
     '          DXDXIQ2,GCHQ,GKK,GM,GUQ,PG,
     '          PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,SE,
     '          TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,ITER8,
     '          CUBIC,ERROR,*9999)
            ENDIF
          ELSE IF(ITYP3(NRLIST(1),nx).EQ.2) THEN !FHN
            IF(SOLVE_ACTIV) THEN
              CALL MARCH8_COUPLED(%VAL(INTEGRATOR_IWORK_PTR),
     '          CELL_ICQS_VALUE,IBT,ICQS,ICQS_SPATIAL,IDO,
     '          IICQS_SPATIAL,IRCQS_SPATIAL,INP,ISC_GKK,ISR_GKK,
     '          NBH,NBJ,NEELEM,NENQ,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,
     '          NHE,NHP,NKHE,
     '          NKH,NLQ,NPF,NPNE,NP_INTERFACE,NPLIST,NPNODE,NQGP,
     '          NQGP_PIVOT,NQLIST,NQNP,NQS,NQSCNB,NQXI,NRLIST,
     '          NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          %VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GK,
     '          GK2,GK3,GKK,GM,GQ,GQ2,GQ3,GUQ,NQGW,
     '          PG,PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,SE,
     '          TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,
     '          FHN,ERROR,*9999)
            ELSE
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '          NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,  
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,FHN,ERROR,*9999)
            ENDIF
          ELSE IF(ITYP3(NRLIST(1),nx).EQ.3) THEN !VCD
            IF(SOLVE_ACTIV) THEN
              CALL MARCH8_COUPLED(%VAL(INTEGRATOR_IWORK_PTR),
     '          CELL_ICQS_VALUE,IBT,ICQS,ICQS_SPATIAL,IDO,
     '          IICQS_SPATIAL,IRCQS_SPATIAL,INP,ISC_GKK,ISR_GKK,
     '          NBH,NBJ,NEELEM,NENQ,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,                 
     '          NHE,NHP,NKHE,
     '          NKH,NLQ,NPF,NPNE,NP_INTERFACE,NPLIST,NPNODE,NQGP,
     '          NQGP_PIVOT,NQLIST,NQNP,NQS,NQSCNB,NQXI,NRLIST,
     '          NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          %VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GK,
     '          GK2,GK3,GKK,GM,GQ,GQ2,GQ3,GUQ,NQGW,
     '          PG,PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,SE,
     '          TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,VCD,
     '          ERROR,*9999)
            ELSE
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '          NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,              
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,VCD,ERROR,*9999)
            ENDIF
          ELSE IF(ITYP3(NRLIST(1),nx).EQ.4) THEN !BR
            IF(SOLVE_ACTIV) THEN
              CALL MARCH8_COUPLED(%VAL(INTEGRATOR_IWORK_PTR),
     '          CELL_ICQS_VALUE,IBT,ICQS,ICQS_SPATIAL,IDO,
     '          IICQS_SPATIAL,IRCQS_SPATIAL,INP,ISC_GKK,ISR_GKK,
     '          NBH,NBJ,NEELEM,NENQ,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,   
     '          NHE,NHP,NKHE,
     '          NKH,NLQ,NPF,NPNE,NP_INTERFACE,NPLIST,NPNODE,NQGP,
     '          NQGP_PIVOT,NQLIST,NQNP,NQS,NQSCNB,NQXI,NRLIST,
     '          NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          %VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GK,
     '          GK2,GK3,GKK,GM,GQ,GQ2,GQ3,GUQ,NQGW,
     '          PG,PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,SE,
     '          TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,
     '          BR,ERROR,*9999)
            ELSE
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '          NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT, 
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,BR,ERROR,*9999)
            ENDIF
          ELSE IF(ITYP3(NRLIST(1),nx).EQ.5) THEN !JRW
            CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,IBT,
     '        ICQS,
     '        ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,ISC_GKK,
     '        ISR_GKK,NAQ,NBH,NBJ,NEELEM,NENQ,NXI,NQNE,
     '        NLATNE,NLATNQ,NLATPNQ,NQNLAT,  
     '        NHE,
     '        NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,NQGP_PIVOT,NQGW,
     '        NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,NTIME_POINTS,NVHE,
     '        NVHP,NW,
     '        NWQ,NXLIST,NXQ,NYNE,NYNP,TV_BC_SET,
     '        %VAL(INTEGRATOR_WORK_PTR),
     '        ALPHA,AQ,CELL_RCQS_VALUE,CQ(1,1,nx),CURVCORRECT,
     '        DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,GM,GUQ,
     '        PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '        RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,
     '        ZP,FIXQ,ITER8,JRW_CELL,ERROR,*9999)
          ELSE IF(ITYP3(NRLIST(1),nx).EQ.6) THEN !LR2
            IF(SOLVE_ACTIV) THEN
              CALL MARCH8_COUPLED(%VAL(INTEGRATOR_IWORK_PTR),
     '          CELL_ICQS_VALUE,IBT,ICQS,ICQS_SPATIAL,IDO,
     '          IICQS_SPATIAL,IRCQS_SPATIAL,INP,ISC_GKK,ISR_GKK,
     '          NBH,NBJ,NEELEM,NENQ,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,              
     '          NHE,NHP,NKHE,
     '          NKH,NLQ,NPF,NPNE,NP_INTERFACE,NPLIST,NPNODE,NQGP,
     '          NQGP_PIVOT,NQLIST,NQNP,NQS,NQSCNB,NQXI,NRLIST,
     '          NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          %VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GK,
     '          GK2,GK3,GKK,GM,GQ,GQ2,GQ3,GUQ,NQGW,
     '          PG,PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,SE,
     '          TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,
     '          LR_CELL,ERROR,*9999)
            ELSE
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '          NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,               
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,LR_CELL,ERROR,*9999)
            ENDIF
          ELSE IF(ITYP3(NRLIST(1),nx).EQ.7) THEN !DFN
            CALL ASSERT(.FALSE.,' >>DFN Not Implemented',ERROR,*9999)
C          CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,IBT,ICQS,
C     '      ICQS_SPATIAL,
C     '      IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,ISC_GKK,
C     '      ISR_GKK,
C     '      NAQ,NBH,NBJ,NEELEM,NENQ,NHE,NHP,NKE,NKH,NLQ,NPF,
C     '      NPNE,NPNODE,NQGP,NQGP_PIVOT,NQGW,NQS,
C     '      NQXI,NRLIST,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
C     '      %VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,CELL_RCQS_VALUE,CQ(1,1,nx),
C     '      CURVCORRECT,DNUDXQ,
C     '      DXDXIQ,DXDXIQ2,GCHQ,GKK,GM,GUQ,PG,
C     '      PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,
C     '      SE,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,ITER8,
C     '      BR,ERROR,*9999)
          ELSE IF(ITYP3(NRLIST(1),nx).EQ.8) THEN !N98
            IF(SOLVE_ACTIV) THEN
              CALL MARCH8_COUPLED(%VAL(INTEGRATOR_IWORK_PTR),
     '          CELL_ICQS_VALUE,IBT,ICQS,ICQS_SPATIAL,IDO,
     '          IICQS_SPATIAL,IRCQS_SPATIAL,INP,ISC_GKK,ISR_GKK,
     '          NBH,NBJ,NEELEM,NENQ,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,              
     '          NHE,NHP,NKHE,
     '          NKH,NLQ,NPF,NPNE,NP_INTERFACE,NPLIST,NPNODE,NQGP,
     '          NQGP_PIVOT,NQLIST,NQNP,NQS,NQSCNB,NQXI,NRLIST,
     '          NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          %VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GK,
     '          GK2,GK3,GKK,GM,GQ,GQ2,GQ3,GUQ,NQGW,
     '          PG,PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,SE,
     '          TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,
     '          NOBLE98_CELL,ERROR,*9999)
            ELSE
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,
     '          NEELEM,NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,                 
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,NOBLE98_CELL,ERROR,*9999)
            ENDIF
          ELSE IF(ITYP3(NRLIST(1),nx).EQ.9) THEN !HH
            CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,IBT,
     '        ICQS,
     '        ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,ISC_GKK,
     '        ISR_GKK,NAQ,NBH,NBJ,NEELEM,NENQ,NXI,NQNE,
     '        NLATNE,NLATNQ,NLATPNQ,NQNLAT,            
     '        NHE,
     '        NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,NQGP_PIVOT,NQGW,
     '        NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,NTIME_POINTS,NVHE,
     '        NVHP,NW,
     '        NWQ,NXLIST,NXQ,NYNE,NYNP,TV_BC_SET,
     '        %VAL(INTEGRATOR_WORK_PTR),
     '        ALPHA,AQ,CELL_RCQS_VALUE,CQ(1,1,nx),CURVCORRECT,
     '        DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,GM,GUQ,
     '        PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '        RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,
     '        ZP,FIXQ,ITER8,HH_CELL,ERROR,*9999)
          ELSE IF(ITYP3(NRLIST(1),nx).EQ.10) THEN !User defined
            IF(KTYP33.EQ.1) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),
     '          CELL_ICQS_VALUE,IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '          NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,USER_CELL1,ERROR,*9999)
            ELSE IF(KTYP33.EQ.2) THEN
              IF(SOLVE_ACTIV) THEN
                CALL MARCH8_COUPLED(%VAL(INTEGRATOR_IWORK_PTR),
     '            CELL_ICQS_VALUE,IBT,ICQS,ICQS_SPATIAL,IDO,
     '            IICQS_SPATIAL,IRCQS_SPATIAL,INP,ISC_GKK,ISR_GKK,
     '            NBH,NBJ,NEELEM,NENQ,
     '            NLATNE,NLATNQ,NLATPNQ,NQNLAT,
     '            NHE,NHP,NKHE,
     '            NKH,NLQ,NPF,NPNE,NP_INTERFACE,NPLIST,NPNODE,NQGP,
     '            NQGP_PIVOT,NQLIST,NQNP,NQS,NQSCNB,NQXI,NRLIST,
     '            NTIME_INTERP,NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,
     '            NXQ,NYNE,NYNP,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '            CELL_RCQS_VALUE,CQ(1,1,nx),CURVCORRECT,DNUDXQ,
     '            DXDXIQ,DXDXIQ2,GCHQ,GK,GK2,GK3,GKK,GM,GQ,GQ2,GQ3,GUQ,
     '            NQGW,PG,PROPQ(1,1,1,1,1,nx),
     '            RCQS,RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,
     '            YP,YQ,YQS,ZA,ZE,ZP,FIXQ,USER_CELL2,ERROR,*9999)
              ELSE
                CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '            IBT,
     '            ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '            ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,
     '            NEELEM,NENQ,NXI,NQNE,
     '            NLATNE,NLATNQ,NLATPNQ,NQNLAT,                 
     '            NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '            NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '            NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '            TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '            CELL_RCQS_VALUE,CQ(1,1,nx),CURVCORRECT,DNUDXQ,
     '            DXDXIQ,DXDXIQ2,GCHQ,GKK,GM,GUQ,
     '            PG,PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,SE,
     '            TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,ITER8,
     '            USER_CELL2,ERROR,*9999)
              ENDIF
            ELSE IF(KTYP33.EQ.3) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,
     '          NEELEM,NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT, 
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,USER_CELL3,ERROR,*9999)
            ELSE IF(KTYP33.EQ.4) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,
     '          NEELEM,NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,  
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,USER_CELL4,ERROR,*9999)
            ELSE IF(KTYP33.EQ.5) THEN
              IF(SOLVE_ACTIV) THEN
                CALL MARCH8_COUPLED(%VAL(INTEGRATOR_IWORK_PTR),
     '            CELL_ICQS_VALUE,IBT,ICQS,ICQS_SPATIAL,IDO,
     '            IICQS_SPATIAL,IRCQS_SPATIAL,INP,ISC_GKK,ISR_GKK,
     '            NBH,NBJ,NEELEM,NENQ,
     '            NLATNE,NLATNQ,NLATPNQ,NQNLAT,     
     '            NHE,NHP,NKHE,
     '            NKH,NLQ,NPF,NPNE,NP_INTERFACE,NPLIST,NPNODE,NQGP,
     '            NQGP_PIVOT,NQLIST,NQNP,NQS,NQSCNB,NQXI,NRLIST,
     '            NTIME_INTERP,NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,
     '            NXQ,NYNE,NYNP,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '            CELL_RCQS_VALUE,CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,
     '            DXDXIQ2,GCHQ,GK,GK2,GK3,GKK,GM,GQ,GQ2,GQ3,GUQ,
     '            NQGW,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '            RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,
     '            YQS,ZA,ZE,ZP,FIXQ,USER_CELL5,ERROR,*9999)
              ELSE
                CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '            IBT,
     '            ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '            ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,
     '            NEELEM,NENQ,NXI,NQNE,
     '            NLATNE,NLATNQ,NLATPNQ,NQNLAT,
     '            NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '            NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '            NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '            TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '            CELL_RCQS_VALUE,CQ(1,1,nx),CURVCORRECT,DNUDXQ,
     '            DXDXIQ,DXDXIQ2,GCHQ,GKK,GM,GUQ,
     '            PG,PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,SE,
     '            TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,ITER8,
     '            USER_CELL5,ERROR,*9999)
              ENDIF
            ELSE IF(KTYP33.EQ.6) THEN ! CellML
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,
     '          INP,ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,
     '          NEELEM,NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,CQ(1,1,nx),CURVCORRECT,DNUDXQ,
     '          DXDXIQ,DXDXIQ2,GCHQ,GKK,GM,GUQ,
     '          PG,PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,SE,
     '          TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,ITER8,
     '          CELLML_DUMMY_ROUTINE,ERROR,*9999)
            ENDIF
          ENDIF !ITYP3(nr,nx)
        ELSEIF(ITYP19(NRLIST(1),nx).EQ.2) THEN !mechanical
          IF(ITYP3(NRLIST(1),nx).EQ.1) THEN !HMT
            CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,IBT,
     '        ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '        ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,
     '        NEELEM,NENQ,NXI,NQNE,
     '        NLATNE,NLATNQ,NLATPNQ,NQNLAT, 
     '        NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '        NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '        NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '        TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '        CELL_RCQS_VALUE,
     '        CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,GM,
     '        GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '        RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '        ZE,ZP,FIXQ,ITER8,HMT_CELL,ERROR,*9999)
          ELSE IF(ITYP3(NRLIST(1),nx).EQ.5) THEN !User defined
            IF(KTYP33.EQ.1) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '          NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,              
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,USER_CELL1,ERROR,*9999)
            ELSE IF(KTYP33.EQ.2) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,
     '          NEELEM,NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,CQ(1,1,nx),CURVCORRECT,DNUDXQ,
     '          DXDXIQ,DXDXIQ2,GCHQ,GKK,GM,GUQ,
     '          PG,PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,SE,
     '          TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,ITER8,
     '          USER_CELL2,ERROR,*9999)
            ELSE IF(KTYP33.EQ.3) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,
     '          NEELEM,NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT, 
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,USER_CELL3,ERROR,*9999)
            ELSE IF(KTYP33.EQ.4) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,
     '          NEELEM,NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,               
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,USER_CELL4,ERROR,*9999)
            ELSE IF(KTYP33.EQ.5) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,
     '          NEELEM,NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,CQ(1,1,nx),CURVCORRECT,DNUDXQ,
     '          DXDXIQ,DXDXIQ2,GCHQ,GKK,GM,GUQ,
     '          PG,PROPQ(1,1,1,1,1,nx),RCQS,RCQS_SPATIAL,RHS,SE,
     '          TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,ZE,ZP,FIXQ,ITER8,
     '          USER_CELL5,ERROR,*9999)
            ENDIF
          ELSE
            ERROR='Invalid mechanics model'
            GOTO 9999
          ENDIF
        ELSEIF(ITYP19(NRLIST(1),nx).EQ.3) THEN !metabolism
          IF(ITYP3(NRLIST(1),nx).EQ.1) THEN !myocite
            CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,IBT,
     '        ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '        ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '        NENQ,NXI,NQNE,
     '        NLATNE,NLATNQ,NLATPNQ,NQNLAT,
     '        NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '        NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '        NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '        TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '        CELL_RCQS_VALUE,
     '        CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,GM,
     '        GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '        RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '        ZE,ZP,FIXQ,ITER8,METABOLISM_CELL,ERROR,*9999)
          ELSE
            ERROR='Invalid metabolism model'
            GOTO 9999
          ENDIF
        ELSEIF(ITYP19(NRLIST(1),nx).EQ.7) THEN !coupled
          IF(ITYP3(NRLIST(1),nx).EQ.2) THEN !Noble 98 - HMT
            CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,IBT,
     '        ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '        ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '        NENQ,NXI,NQNE,
     '        NLATNE,NLATNQ,NLATPNQ,NQNLAT,   
     '        NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '        NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '        NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '        TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '        CELL_RCQS_VALUE,
     '        CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,GM,
     '        GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '        RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '        ZE,ZP,FIXQ,ITER8,NOBLE98_HMT_CELL,ERROR,*9999)
          ELSEIF(ITYP3(NRLIST(1),nx).EQ.3) THEN!HMT-SPM coupled mechanics model
            CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,IBT,
     '        ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '        ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '        NENQ,NXI,NQNE,
     '        NLATNE,NLATNQ,NLATPNQ,NQNLAT, 
     '        NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '        NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '        NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '        TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '        CELL_RCQS_VALUE,
     '        CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,GM,
     '        GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '        RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '        ZE,ZP,FIXQ,ITER8,HMT_SPM_CELL,ERROR,*9999)
          ELSEIF(ITYP3(NRLIST(1),nx).EQ.4) THEN !User defined
            IF(KTYP33.EQ.1) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '          NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,                    
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,USER_CELL1,ERROR,*9999)
            ELSE IF(KTYP33.EQ.2) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '          NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,USER_CELL2,ERROR,*9999)
            ELSE IF(KTYP33.EQ.3) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '          NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT, 
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,USER_CELL3,ERROR,*9999)
            ELSE IF(KTYP33.EQ.4) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '          NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,               
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,USER_CELL4,ERROR,*9999)
            ELSE IF(KTYP33.EQ.5) THEN
              CALL MARCH8(%VAL(INTEGRATOR_IWORK_PTR),CELL_ICQS_VALUE,
     '          IBT,
     '          ICQS,ICQS_SPATIAL,IDO,IICQS_SPATIAL,IRCQS_SPATIAL,INP,
     '          ISC_GKK,ISR_GKK,NAQ,NBH,NBJ,NEELEM,
     '          NENQ,NXI,NQNE,
     '          NLATNE,NLATNQ,NLATPNQ,NQNLAT,              
     '          NHE,NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     '          NQGP_PIVOT,NQGW,NQS,NQSCNB,NQXI,NRLIST,NTIME_INTERP,
     '          NTIME_POINTS,NVHE,NVHP,NW,NWQ,NXLIST,NXQ,NYNE,NYNP,
     '          TV_BC_SET,%VAL(INTEGRATOR_WORK_PTR),ALPHA,AQ,
     '          CELL_RCQS_VALUE,
     '          CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,GCHQ,GKK,
     '          GM,GUQ,PG,PROPQ(1,1,1,1,1,nx),RCQS,
     '          RCQS_SPATIAL,RHS,SE,TIME_VALUES,WG,XIQ,XQ,YP,YQ,YQS,ZA,
     '          ZE,ZP,FIXQ,ITER8,USER_CELL5,ERROR,*9999)
            ELSE
              ERROR='Invalid user defined model'
              GOTO 9999
            ENDIF
          ELSE
            ERROR='Invalid coupled model'
            GOTO 9999
          ENDIF
        ENDIF !ITYP19(nr,nx)

      ELSE !Loop over region list
        DO nonrlist=1,NRLIST(0)
          nr=NRLIST(nonrlist)
C  OR 17-06-'05  
C     Using multitiple regions and a matrix sparsity format resulted in
C     having currently stored vectors ISC ans ISR from the last region
C     The following is included to obtain the ISC and ISR vectors for 
C     the current region.
C     There might be a better place to inculde this, but it works.
C          IF (SPARSEGKK(nx).GT.0) THEN
C            WORK_PTR=0
C            CALL ALLOCATE_MEMORY(NYT(1,1,nx)*NYT(2,1,nx),1,CHARTYPE,
C     &           WORK_PTR,.TRUE.,ERROR,*9999)
C            CALL CALC_SPARSE_SOLVE(NISC_GKM,NISR_GKM,ISC_GK,ISR_GK,LGE,
C     &           NYT(1,1,nx),NYT(2,1,nx),NBH,1,NEELEM,NHE,NPNE,NPNY,
C     &           NRLIST ,NVHE,nx,NYNE,NYNP,NYNR,NZ_GK_M,SPARSEGKK(nx),
C     &           %VAL(WORK_PTR),FIX,.TRUE.,ERROR,*9999)
C            CALL FREE_MEMORY(WORK_PTR,ERROR,*9999)
C          ENDIF 

          IF(ITYP5(nr,nx).EQ.1) THEN !problem is static  
C           JWF 16/08/04 Contact mechanics option for only one region    
C NEWS 25/06/05 JHC Combine NONLIN_CONT with NONLIN
C            IF (KTYP5G(nr).GE.1) THEN !contact mechanics problem
C              CALL NONLIN_CONT(AUGMENT,IBT,IDO,INP,ISC_GK,
C     &          ISC_GKK,ISC_GQ,ISR_GK,ISR_GKK,ISR_GQ,LGE,NAN,NBH,
C     &          NBHF,NBJ,NBJF,NEELEM,NELIST,NENP,NFF,NFFACE,NGAP,
C     &          NHE,NHP,NKB,NKEF,NKH,NKHE,NKJE,NMNO,NNB,NNF,NONY,
C     &          NORD,NPF,NP_INTERFACE,NPNE,NPNODE,NPNY,nr,
C     &          NRE,NRLIST,NSB,NVHE,NVHP,NVJE,NW,nx,NXI,NYNE,NYNO,
C     &          NYNP,NYNR,Z_CONT_LIST,CE,CG,CGE,CONT_STIFF,CONY,CP,
C     &          CURVCORRECT,CYNO,D_RE,D_RI3,D_TG,D_ZG,ERRMAX,ES,FEXT,
C     &          GK,GKK,GQ,GR,GRR,PG,RE1,RE2,RG,SE,TIED_STIFF,WG,XA,XE,
C     &          XG,XO,XP,YG,YGF,YP,ZA,ZA1,Z_CONT,ZE,ZE1,ZG,ZG1,ZP,ZP1,
C     &          FIX,ERROR,*9999)
C            ELSE ! problem is not contact  
C NEWE JHC
            IF(ITYP6(nr,nx).EQ.1) THEN !problem is linear
              IF(ITYP4(nr,nx).EQ.1) THEN !problem is f.e.s only
                IF(ITYP2(nr,nx).EQ.4) THEN !Helmholtz eq (complex soln)
                ELSE IF(KTYP5G(nr).GE.1) THEN !contact mechanics problem
C NEWS 25/06/05 JHC for linear elasticity with contact mechanics, NONLIN_CONT
C is still used.
                  CALL NONLIN_CONT(IBT,IDO,INP,ISC_GK,
     &              ISC_GKK,ISC_GQ,ISR_GK,ISR_GKK,ISR_GQ,LGE,NAN,NBH,
     &              NBHF,NBJ,NBJF,NEELEM,NENP,NFF,NFFACE,NGAP,
     &              NHE,NHP,NKB,NKEF,NKH,NKHE,NKJE,NMNO,NNB,NNF,NONY,
     &              NORD,NPF,NP_INTERFACE,NPNE,NPNODE,NPNY,nr,
     &              NRE,NRLIST,NSB,NVHE,NVHP,NVJE,NW,nx,NXI,NYNE,NYNO,
     &              NYNP,NYNR,Z_CONT_LIST,CE,CG,CGE,CONY,CP,
     &              CURVCORRECT,CYNO,ERRMAX,
     &              FEXT,GK,GKK,GQ,GR,GRR,PG,RE1,RG,SE,
     &              WG,XA,XG,XO,XP,YG,YGF,YP,ZA,ZA1,Z_CONT,ZE,ZE1,
     &              ZP,ZP1,FIX,ERROR,*9999)   
C NEWE JHC
                ELSE  
                  UPDATE_MATRIX=.NOT.ASSEMBLE_SOLUTION(nr,nx)
  
                  CALL SOLVE1(ISC_GK,ISC_GKK(1,nx),ISC_GQ,ISR_GK,
     '              ISR_GKK(1,nx),ISR_GQ,LGE,NBH,NENP,NHE,
     '              NONY(0,1,1,nr,nx),NP_INTERFACE,NPNE,
     '              NPNY(0,1,0,nx),nr,NRE,
     '              NVHE,nx,NYNE,NYNO(0,1,1,nr,nx),NYNP,
     '              NYNR(0,0,1,nr,nx),CONY(0,1,1,nr,nx),
     '              CYNO(0,1,1,nr,nx),GK,GKK(1,nx),GQ,GR,
     '              GRR,XO(1,nx),YP(1,1,nx),FIRSTS(nx),FIX(1,1,nx),
     '              UPDATE_MATRIX,.TRUE.,ERROR,*9999)
                ENDIF

              ELSE IF(ITYP4(nr,nx).EQ.2.OR.ITYP4(nr,nx).EQ.3) THEN
              !problem is bdry elements

                UPDATE_MATRIX=.NOT.ASSEMBLE_SOLUTION(nr,nx)

                CALL SOLVE2(ISC_GK,ISC_GKK(1,nx),ISC_GQ,ISR_GK,
     '            ISR_GKK(1,nx),ISR_GQ,LGE,NBH,NENP,NHE,NDIPOLES,
     '            NONY(0,1,1,nr,nx),NP_INTERFACE,NPNE,NPNY(0,1,0,nx),
     '            nr,NRE,NVHE,nx,NYNE,NYNO(0,1,1,nr,nx),NYNP,
     '            NYNR(0,0,1,nr,nx),CONY(0,1,1,nr,nx),
     '            CYNO(0,1,1,nr,nx),GD,GK,
     '            GKK(1,nx),GQ,GRR,XO(1,nx),YP(1,1,nx),
     '            FIRSTS(nx),FIX(1,1,nx),UPDATE_MATRIX,
     '            .TRUE.,.TRUE.,ERROR,*9999)

C SGM 26 Oct 2000 grid-based Finite element also
C MLT 29Nov02 Grid Finite Volume also
              ELSE IF(ITYP4(nr,nx).EQ.4.OR.ITYP4(nr,nx).EQ.6.OR.
     '                ITYP4(nr,nx).EQ.7) THEN 
C problem is collocation or grid-based FE
                IF(ITYP2(nr,nx).EQ.3) THEN
                  IF(SOLVE_ACTIV) THEN
                    CALL SOLVE8_COUPLED(ISC_GKK,ISR_GKK,NEELEM,NENQ,
     '                NLQ,NP_INTERFACE,NPLIST,NPNODE,NQGP,NQGP_PIVOT,
     '                NQLIST,NQNP,NQS,NQXI,NRLIST,NWQ,NXLIST,
     '                NXQ(-NIM,0,0,1),NYNP,CQ(1,1,nx),DNUDXQ,DXDXIQ,
     '                DXDXIQ2,GCHQ,GK,GK2,GK3,GKK,GQ,GQ2,GQ3,GRR,GUQ,
     '                NQGW,PROPQ(1,1,1,1,1,nx),XQ,YP,YQ,FIXQ,ERROR,
     '                *9999)
                  ELSE
                    CALL SOLVE8(IBT,IDO,INP,ISC_GKK,ISR_GKK,NBH,NBJ,
     &                NEELEM,NENQ,NLATNE,NLATNQ,NLATPNQ,NQNLAT,NHE,
     &                NHP,NKHE,NKH,NLQ,NPF,NPNE,NPNODE,NQGP,
     &                NQGP_PIVOT,NQS,NQSCNB,NQXI,NRLIST,NVHE,NVHP,NW,
     &                NWQ,nx,NXLIST,NXQ,NYNE,NYNP,ALPHA,AQ,
     &                CQ(1,1,nx),CURVCORRECT,DNUDXQ,DXDXIQ,DXDXIQ2,
     &                GCHQ,GKK,GM,GRR,GUQ,NQGW,PG,
     &                PROPQ(1,1,1,1,1,nx),RHS,SE,WG,XIQ,XQ,YP,YQ,ZA,
     &                ZE,ZP,FIXQ,ITER8,ERROR,*9999)
                  ENDIF
                ELSE
                  CALL MG_COLLOCATE(NBJ,NAQ,NLQ,NWQ,nx,NXQ,
     '              CQ(1,1,nx),GCHQ,GUQ,PROPQ(1,1,1,1,1,nx),
     '              YQ(1,1,1,nx),ERROR,*9999)
                ENDIF
              ENDIF ! ITYP4
 
            ELSE IF(ITYP6(nr,nx).EQ.2) THEN !problem is nonlinear   
C  OR 23-06-'05
C     Using multitiple regions and a matrix sparsity format resulted in
C     having currently stored vectors ISC ans ISR from the last region
C     The following is included to obtain the ISC and ISR vectors for
C     the current region.
              IF (SPARSEGKK(nx).GT.0) THEN
                WORK_PTR=0
                CALL ALLOCATE_MEMORY(NYT(1,1,nx)*NYT(2,1,nx),1,
     &               CHARTYPE,WORK_PTR,.TRUE.,ERROR,*9999)
                CALL CALC_SPARSE_SOLVE(NISC_GKM,NISR_GKM,ISC_GK,
     &               ISR_GK,LGE,NYT(1,1,nx),NYT(2,1,nx),NBH,1,NEELEM,
     &               NHE,NPNE,NPNY,NRLIST ,NVHE,nx,NYNE,NYNP,NYNR,
     &               NZ_GK_M,SPARSEGKK(nx),%VAL(WORK_PTR),FIX,.TRUE.,
     &               ERROR, *9999)
                CALL FREE_MEMORY(WORK_PTR,ERROR,*9999)
              ENDIF
              CALL NONLIN(IBT,IDO,INP,ISEG,ISELNO,ISFIBR,ISFIEL,
     '          ISC_GK,ISC_GKK(1,nx),ISC_GQ,ISR_GK,ISR_GKK(1,nx),
     '          ISR_GQ,ISLINE,ISLINO,ISNONO,ISTATE,IUSER,IWK,
     '          LGE,MXI,NAN,NBH,NBHF,NBJ,NBJF,NEELEM,NENP,NFF,
     '          NFFACE,NGAP,NHE(1,nx),NHP(1,0,nx),NKB,NKEF,
     '          NKH,NKHE,NKJE,NLATNE,NLL,NLLIST,NMNO(1,0,nx),NNB,NNF,
     '          NONY(0,1,1,0,nx),NPF,NP_INTERFACE,NPL,NPNE,NPNODE,
     '          NPNY(0,1,0,nx),NQNE,NQNLAT,
     '          NQS,NQXI,nr,NRE,NRLIST,NSB,
     '          NTIW,NVHE,NVHP,NVJE,NW,nx,NXI,NYNE,NYNO(0,1,1,0,nx),
     '          NYNP,NYNR(0,0,1,0,nx),Z_CONT_LIST,
     '          CE(1,1,nx),CG,CGE(1,1,1,nx),
     '          CONY(0,1,1,0,nx),CP(1,1,nx),CURVCORRECT,
     '          CYNO(0,1,1,0,nx),DL,ERRMAX,
     '          FEXT,GK,GKK(1,nx),GQ,GR,GRR,PAOPTI,PG,PMIN,PMAX,R,
     '          RE1,RESID,RESJAC,RG,SE,USER,WARM_START,
     '          WG,XA,XC,XE,XG,XO(1,nx),XP,XQ,YG,YGF,YP(1,1,nx),
     '          YQ(1,1,1,nx),ZA,ZA1,Z_CONT,ZE,ZE1,ZP,ZP1,CSEG,
     '          FIX(1,1,nx),ERROR,*9999)
            ENDIF !ityp6
                                                   
          ELSE IF(ITYP5(nr,nx).EQ.2) THEN !problem is time-dependent
            IF(ITYP4(nr,nx).EQ.1) THEN !problem is finite elements only
              IF(ITYP2(nr,nx).EQ.4) THEN  !solve by characteristics
                CALL MARCH2(NBH,NEELEM,NHE(1,nx),
     '            NHP(1,nr,nx),NKH(1,1,1,nr),NPNODE,nr,
     '            NVHP(1,1,1,nr),nx,NYNE,NYNP,NYNR(0,0,1,nr,nx),
     '            XP,YP(1,1,nx),ZA,ZP,ERROR,*9999)
              ELSE !solve by finite differences or constant wavespeed
                IF(ITYP2(nr,nx).EQ.8) THEN    !cardiac act.n threshold
                  IF(KTYP23.EQ.1) THEN !fixed time step model
                    WRITE(OP_STRING,'('' MARCH3 and TFRONT have been'
     '                 //'archived'')')
                    CALL WRITES(IOOP,OP_STRING,ERROR,*9999)
                  ELSE IF(KTYP23.EQ.2) THEN !variable time step model
                    WRITE(OP_STRING,'('' MARCH4 and FFRONT have been'
     '                 //'archived'')')
                    CALL WRITES(IOOP,OP_STRING,ERROR,*9999)
                  ENDIF
                ELSE !problem is parabolic
                  IF(ITYP2(nr,nx).EQ.11)THEN !pulmonary transport
                    GK2_PTR=0
                    NO_NE_PTR=0
                    NY_OFST_PTR=0
                    NZ_ESED_PTR=0
                    STACK_ED_PTR=0
                    STACK_EM_PTR=0
                    STACK_ES_PTR=0
                    IF(ITYP3(nr,nx).LE.2.OR.ITYP3(nr,nx).EQ.5)THEN
                      CALL ALLOCATE_MEMORY(NZ_GK_M,0,DPTYPE,GK2_PTR,
     '                  .TRUE.,ERROR,*9999)
                      CALL ALLOCATE_MEMORY(12*NE_R_M,1,DPTYPE,
     &                  STACK_ED_PTR,.TRUE.,ERROR,*9999)
                      CALL ALLOCATE_MEMORY(12*NE_R_M,1,DPTYPE,
     &                  STACK_EM_PTR,.TRUE.,ERROR,*9999)
                      CALL ALLOCATE_MEMORY(12*NE_R_M,1,DPTYPE,
     '                  STACK_ES_PTR,.TRUE.,ERROR,*9999)
                    ENDIF
                    CALL ALLOCATE_MEMORY(NEM,0,INTTYPE,NO_NE_PTR,
     '                .TRUE.,ERROR,*9999)
                    CALL ALLOCATE_MEMORY(13*NE_R_M,0,INTTYPE,
     '                NZ_ESED_PTR,.TRUE.,ERROR,*9999)
                    CALL ALLOCATE_MEMORY(NYM,0,INTTYPE,
     '                NY_OFST_PTR,.TRUE.,ERROR,*9999)
                    CALL MARCH11(IBT,IDO,INP,ISC_GD,ISC_GK,
     &                ISC_GKK(1,nx),ISR_GD,ISR_GK,ISR_GKK(1,nx),NBH,NBJ,
     &                NEELEM(0,nr),NELIST,NENP(1,0,nr),NHE(1,nx),
     &                NHP(1,nr,nx),NKJE,%VAL(NO_NE_PTR),
     &                NONY(0,1,1,nr,nx),NORD,NPF,
     &                NPLIST2,NPNE,NPNODE(0,nr),NPNY(0,1,0,nx),nr,
     &                NTIME_POINTS,NVJE,NVJP,nx,NXI,NYNE,
     &                NYNO(0,1,1,nr,nx),NYNP(1,1,1,1,0,1,nr),
     &                NYNR(0,0,1,nr,nx),%VAL(NY_OFST_PTR),
     &                %VAL(NZ_ESED_PTR),ACINUS,BBM,
     &                CE(1,1,nx),CG,CGE(1,1,1,1),
     &                CONY(0,1,1,nr,nx),CYNO(0,1,1,nr,nx),CP(1,1,1),ED,
     &                EM,ER,ES,GD,GK,%VAL(GK2_PTR),GKK(1,nx),GR,GRR,PG,
     &                RG,SE,%VAL(STACK_ED_PTR),%VAL(STACK_EM_PTR),
     &                %VAL(STACK_ES_PTR),TIME_VALUES,WG,XA,XAB,XG,
     &                XO(1,nx),XP,YG,YP(1,1,nx),ZE,ZG,FIRST_SOLVE(nx),
     &                FIX(1,1,nx),ERROR,*9999)
                    IF(ITYP3(nr,nx).LE.2.OR.ITYP3(nr,nx).EQ.5)THEN
                      CALL FREE_MEMORY(GK2_PTR,ERROR,*9999)
                      CALL FREE_MEMORY(STACK_ED_PTR,ERROR,*9999)
                      CALL FREE_MEMORY(STACK_EM_PTR,ERROR,*9999)
                      CALL FREE_MEMORY(STACK_ES_PTR,ERROR,*9999)
                    ENDIF
                    CALL FREE_MEMORY(NO_NE_PTR,ERROR,*9999)
                    CALL FREE_MEMORY(NZ_ESED_PTR,ERROR,*9999)
                    CALL FREE_MEMORY(NY_OFST_PTR,ERROR,*9999)
                  ELSE
                    CALL MARCH1(IBT,IDO,INP,ISC_GD,ISC_GK,ISC_GKK(1,nx),
     '                ISC_GM,ISC_GQ,ISR_GD,ISR_GK,ISR_GKK(1,nx),ISR_GM,
     '                ISR_GQ,LGE,NBH,NBJ,NEELEM,NENP,NHE(1,nx),
     '                NHP(1,nr,nx),NHQ(1,nx),NKJE,NKH(1,1,1,nr),NKHE,
     '                NONY(0,1,1,0,nx),NORD,NPF,NP_INTERFACE,NPNE,
     '                NPNODE,NPNY(0,1,0,nx),NQNY(1,1,0,nx),nr,NRE,
     '                NRLIST,NRLIST2,NVHE,NVHP(1,1,1,nr),NVJE,NW,nx,
     '                NYNE,NYNO(0,1,1,0,nx),NYNP,NYNR(0,0,1,0,nx),
     '                NYQNR(0,0,1,0,nx),CE(1,1,nx),CG,CGE(1,1,1,nx),
     '                CONY(0,1,1,0,nx),CP(1,1,nx),CYNO(0,1,1,0,nx),
     '                ED,EM,ER,ES,GD,GK,GKK(1,nx),GM,GQ,GR,GRR,PG,RG,SE,
     '                WG,XA,XE,XG,XO(1,nx),XP,YG,YP(1,1,nx),
     '                YQ(1,1,1,nx),YQS,
     '                ZA,ZE,ZG,ZP,FIX(1,1,nx),ERROR,*9999)
                  ENDIF
                ENDIF
              ENDIF

C MLB 28 August 1996 Moved outside region loop (lower level)
C           ELSE IF(ITYP4(nr,nx).EQ.4) THEN !Collocation
C             IF(ITYP2(nr,nx).EQ.9) THEN    !Bidomain
C               CALL MARCH5(NBJ,NEELEM,NRLIST,NWQ,nx,NXQ,
C    '            CQ,GCHQ,GUQ,PROPQ,XQ,YQ,ERROR,*9999)
C             ENDIF
            ELSE IF(ITYP4(nr,nx).EQ.3) THEN !finite difference
              IF(ITYP16(nr,nx).eq.4) THEN !Lax-Wendroff
                IF(ITYP3(nr,nx).eq.1) THEN !flow in elastic tube
                  CONECT_PTR=0
                  CALCULATED_PTR=0
                  BC_POINTS_PTR=0
                  BRANCH_PTR=0
                  CALL ALLOCATE_MEMORY(3*3*NQM,0,INTTYPE,
     '              CONECT_PTR,.TRUE.,ERROR,*9999)
                  CALL ALLOCATE_MEMORY(NQM,0,LOGTYPE,
     '              CALCULATED_PTR,.TRUE.,ERROR,*9999)
                  CALL ALLOCATE_MEMORY((NQM+1)*3*3,0,INTTYPE,
     '              BC_POINTS_PTR,.TRUE.,ERROR,*9999)
                  CALL ALLOCATE_MEMORY(NQM,0,LOGTYPE,BRANCH_PTR,.TRUE.,
     '              ERROR,*9999)

                  CALL MARCH4(%VAL(BC_POINTS_PTR),%VAL(BRANCH_PTR),
     '              %VAL(CALCULATED_PTR),%VAL(CONECT_PTR),CQ(1,1,nx),
     '              ER,ES,GKK(1,nx),GRR,ISC_GKK(1,nx),ISR_GKK(1,nx),
     '              LGE,NBJ,NEELEM,NENQ,NHQ(1,nx),NPNE,NQNE,NQS,nr,nx,
     '              NXQ,NYNQ(1,1,0,nx),NYQNR(0,0,1,0,nx),XP,XIP,XQ,
     '              YQ(1,1,1,nx),TIME_VALUES,NTIME_POINTS,NTIME_NR,
     &              ERROR,*9999)

                  CALL FREE_MEMORY(CALCULATED_PTR,ERROR,*9999)
                  CALL FREE_MEMORY(CONECT_PTR,ERROR,*9999)
                  CALL FREE_MEMORY(BRANCH_PTR,ERROR,*9999)
                  CALL FREE_MEMORY(BC_POINTS_PTR,ERROR,*9999)
C... Calculates arterial transit time for lung problems
                  IF(ITYP12(nr,nx).EQ.2.OR.ITYP12(nr,nx).EQ.3) THEN
                    CALL TRANSIT(NBJ,NEELEM,NENP,NENQ,NLL,NPNE,NQET,
     &                NQNE,NQS,nr,NYNQ,DL,XQ,YQ,ERROR,*9999)
                  ENDIF
                  
                ENDIF
              ENDIF
            ELSEIF(ITYP4(nr,nx).EQ.5) THEN !Finite volume
              CALL MARCH60(ISC_GKK(1,nx),ISR_GKK(1,nx),NBH,NBJ,NEELEM,
     '          NELIST,NENFVC,NENP,NFVC,NHE(1,nx),NHP(1,0,nx),NHQ(1,nx),
     '          NKJE,NKH,NODENVC,NODENVCB,NPLIST,NPNE,NPNODE,
     '          NPNY(0,1,0,nx),NQNY(1,1,0,nx),nr,NRE,NRLIST,NRLIST2,
     '          NVCB,NVCNODE,NVHP,NVJE,nx,
     '          NXI,NYNE,NYNP,NYNR(0,0,1,0,nx),NYQNR(0,0,1,0,nx),
     '          GKK(1,nx),GRR,SE,VC,VC_INIT,XNFV,XO(1,nx),XP,YP(1,1,nx),
     '          YQ(1,1,1,nx),YQS,ZA,ZNFV,ZP,ERROR,*9999)
            ENDIF
          ELSE IF(ITYP5(nr,nx).EQ.3) THEN !problem is modal analysis
            IF(ITYP2(nr,nx).EQ.1) THEN      !linear elasticity
              DYNAM2=.TRUE.
              FIRST_A=.TRUE. !temporary
              UPDATE_MATRIX=.TRUE. !temporary
              CALL SOLVE6(ISC_GK,ISC_GKK(1,nx),ISC_GMM,
     '          ISC_GQ,ISR_GK,ISR_GKK(1,nx),ISR_GMM,ISR_GQ,
     '          LGE,NBH,NENP,NHE,NONY(0,1,1,nr,nx),NP_INTERFACE,
     '          NPNE,NPNY(0,1,0,nx),nr,NRE,NVHE,
     '          nx,NYNE,NYNP,NYNR(0,0,1,nr,nx),CONY(0,1,1,nr,nx),
     '          EIGVAL,EIGVEC,GK,GKK(1,nx),GM,GMM,GQ,GRR,
     '          DYNAM2,FIRST_A,UPDATE_MATRIX,ERROR,*9999)
            ELSE IF(ITYP2(nr,nx).EQ.8) THEN !Vocal tract equations
              ERROR='>>Not implemented'
              GOTO 9999
            ELSE
              ERROR='>>Not implemented'
              GOTO 9999
            ENDIF

C 24/2/97 LC archived 2 sections :
C    cpb 1/5/95 Replace Fourier analysis with Quasi-static analysis
C    cpb 12/3/95 Solve6 to fe_archive

          ELSE IF(ITYP5(nr,nx).EQ.4) THEN !Quasi-static analysis
            CALL MARCH6(DIPOLE_CEN_NTIME,DIPOLE_DIR_NTIME,
     '        IBT,IDO,INP,ISC_GK,ISC_GKK(1,nx),ISC_GQ,ISR_GK,
     '        ISR_GKK(1,nx),ISR_GQ,LGE,NBH,NBJ,NDET,NDIPOLES,
     '        NEELEM,NENP,NGAP,
     '        NHE(1,nx),NHP(1,0,nx),NHQ(1,nx),NKH,NKHE,NKJE,NLL,
     '        NONY(0,1,1,0,nx),NORD,NPB,NPF,NP_INTERFACE,NPNE,NPNODE,
     '        NPNY(0,1,0,nx),NQNY(1,1,0,nx),nr,NRE,NRLIST,NRLIST2,
     '        NVHE,NVHP,
     '        NVJE,NW,nx,NYNE,NYNO(0,1,1,0,nx),
     '        NYNP,NYNR(0,0,1,0,nx),NYQNR(0,0,1,0,nx),
     '        CE(1,1,nx),CGE(1,1,1,nx),CONY(0,1,1,0,nx),
     '        CP(1,1,nx),CURVCORRECT,
     '        CYNO(0,1,1,0,nx),DET,DIPOLE_CEN,DIPOLE_DIR,DL,DRDN,DRDNO,
     '        GD,GK,GKK(1,nx),GQ,GR,GRR,PG,RAD,RD,RG,SE,WG,XA,XE,XG,XG1,
     '        XIG,XN,XN_GRAD,XO(1,nx),XP,XR,XR_GRAD,YG,
     '        YP(1,1,nx),YQ(1,1,1,nx),YQS,ZA,ZP,FIX(1,1,nx),ERROR,*9999)
C     SMAR009 18/01/99 removed ,NWP from list

          ELSE IF(ITYP5(nr,nx).EQ.5) THEN !Wavefront path analysis
            IF(ITYP2(nr,nx).EQ.3) THEN !Elliptic eikonal equation
              CALL NONLIN(IBT,IDO,INP,ISEG,ISELNO,ISFIBR,
     '          ISFIEL,ISC_GK,ISC_GKK(1,nx),ISC_GQ,ISR_GK,ISR_GKK(1,nx),
     '          ISR_GQ,ISLINE,ISLINO,ISNONO,ISTATE,IUSER,IWK,LGE,MXI,
     '          NAN,NBH,NBHF,NBJ,NBJF,
     '          NEELEM,NENP,NFF,NFFACE,NGAP,NHE(1,nx),
     '          NHP(1,0,nx),NKB,NKEF,NKH,NKHE,NKJE,NLATNE,NLL,
     '          NLLIST,NMNO(1,0,nx),NNB,NNF,NONY(0,1,1,0,nx),NPF,
     '          NP_INTERFACE,NPL,NPNE,NPNODE,NPNY(0,1,0,nx),NQNE,
     '          NQNLAT,NQS,NQXI,nr,NRE,NRLIST,NSB,NTIW,
     '          NVHE,NVHP,NVJE,NW,nx,NXI,NYNE,NYNO(0,1,1,0,nx),
     '          NYNP,NYNR(0,0,1,0,nx),Z_CONT_LIST,
     '          CE(1,1,nx),CG,CGE(1,1,1,nx),
     '          CONY(0,1,1,0,nx),CP(1,1,nx),
     '          CURVCORRECT,CYNO(0,1,1,0,nx),
     '          DL,
     '          ERRMAX,FEXT,GK,GKK(1,nx),GQ,GR,GRR,PAOPTI,
     '          PG,PMIN,PMAX,R,RE1,
     '          RESID,RESJAC,RG,SE,USER,WARM_START,WG,XA,XC,
     '          XE,XG,XO(1,nx),XP,
     '          XQ,YG,YGF,YP(1,1,nx),YQ(1,1,1,nx),ZA,ZA1,Z_CONT,ZE,
     '          ZE1,ZP,ZP1,CSEG,FIX(1,1,nx),
     '          ERROR,*9999)
            ENDIF

C KAT 1Aug97: Old Laplace transform stuff
C            IF(ITYP4(nr,nx).EQ.1) THEN !problem is finite elements only
C            ELSE IF(ITYP4(nr,nx).EQ.2.OR.ITYP4(nr,nx).EQ.3) THEN
C              !problem is bdry elements
C Routine is in FE90_ARCHIVE
c              CALL LTRANS(IBT,ICN,ICN2,IDO,INP,IP,IRN,IRN2,IWK1,IWK2,
c         '        LGE,LRE,NAN,NBH,NBJ,NFF,NHE(1,nx),NHP(1,nr,nx),
c         '        NKE,NKH(1,1,1,nr),NKJ,
c         '        NLL,NNF,NNL,NNYP,NONY(0,1,1,nr),
c         '        NPB(0,nr),NPF,NPL,NPNE,
c         '        nr,NRE,nx,CE,CG,CONY(0,1,1,nr),CP,
c         '        ED,EM,ER,ES,FEXT,
c         '        GK,GKC,GM,GMC,GR,GRC,PF,PG,RE1,RE2,RG,SE,WG,
c         '        XA,XD,XE,XF,XG,XP,XPD,YD,YP,ZA,ZE,ZF,ZG,ZP,
c         '        GKKC,GKK,GRR,GRRC,WK1,WK2,XO,XOC,
c         '        DYNAM,FIX,SYMM,ERROR,*9999)
C            ENDIF

          ELSE IF(ITYP5(nr,nx).EQ.6) THEN !problem is buckling analysis
cpb 16/4/96 MODAL to CMISS_ARCHIVE
C            CALL MODAL(1,IBT,IDO,INP,IWK1,LGE,
C     '        NBH,NBJ,NEELEM,NHE(1,nx),NHP(1,nr),NKE,
C     '        NKH(1,1,1,nr),NONY(0,1,1,nr),
C     '        NPF,NPNE,NPNODE,
C     '        nr,NVHE,NVHP(1,1,1,nr),NVJE,NVJP,NW,nx,
C     '        NYNE,NYNP,NYNR(0,0,1,nr),
C     '        CE,CG,CONY(0,1,1,nr),CP,ED,EM,ER,ES,
C     '        GD,GK,GM,GR,PG,RG,SE,WG,
C     '        XA,XE,XG,XP,YG,YP,ZA,ZE,ZG,ZP,
C     '        EIGVEC,GKK,GMM,GRR,WK1,WK2,WK3,WK4,XO,
C     '        .TRUE.,FIX,FNY,.TRUE.,ERROR,*9999)
          ENDIF

          ASSEMBLE_SOLUTION(nr,nx)=.TRUE.

        ENDDO !nonrlist
      ENDIF !all

      CALL EXITS('GENSOL')
      RETURN
 9999 CALL ERRORS('GENSOL',ERROR)
      CALL EXITS('GENSOL')
      RETURN 1
      END
