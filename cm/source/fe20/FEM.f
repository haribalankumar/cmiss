      SUBROUTINE FEM(ISEG,CSEG,END,STRING,INTWORK,REALWORK,ERROR,*)

C#### Subroutine: FEM
C###  Description:
C###    FEM Allocates Finite Element arrays

C#### Variable: NELIST2
C###  Type: INTEGER
C###  Set_up: FEM
C###  Description:
C###    Seems to carry information out of IPSOLV and into OPLUNG.

C#### Variable: NELIST3
C###  Type: INTEGER
C###  Set_up: FEM
C###  Description:
C###    Seems to carry information in and out of IPTRSF.

C#### Variable: NPLIST3
C###  Type: INTEGER
C###  Set_up: FEM
C###  Description:
C###    Seems to carry information in and out of IPTRSF.

C#### Variable: NPLIST4
C###  Type: INTEGER
C###  Set_up: FEM
C###  Description:
C###    Seems to carry information in and out of IPTRSF.

C#### Variable: NPLIST5
C###  Type: INTEGER
C###  Set_up: FEM
C###  Description:
C###    Seems to carry information in and out of IPTRSF.

      IMPLICIT NONE
      INCLUDE 'cbdi02.cmn'
      INCLUDE 'cbfe01.cmn'
      INCLUDE 'cell02.cmn'
      INCLUDE 'cellml.cmn'
      INCLUDE 'gen000.cmn'
      INCLUDE 'geom00.cmn'
      INCLUDE 'lead00.cmn'
      INCLUDE 'loc00.inc'
      INCLUDE 'mach00.inc'
      INCLUDE 'mxch.inc'
      INCLUDE 'ptr00.cmn'
      INTEGER LEN_CELL_ICQS_NAMES,LEN_CELL_RCQS_NAMES,
     '  LEN_CELL_YQS_NAMES,LEN_TIME_VARIABLE_NAMES
      PARAMETER (LEN_CELL_ICQS_NAMES=CELL_NAME_LENGTH,
     '  LEN_CELL_RCQS_NAMES=CELL_NAME_LENGTH,
     '  LEN_CELL_YQS_NAMES=CELL_NAME_LENGTH,
     '  LEN_TIME_VARIABLE_NAMES=MXCH)
!     Parameter List
      INTEGER i,ISEG(*),INTWORK(*)
      REAL*8 REALWORK(*)
      CHARACTER CSEG(*)*(*),ERROR*(*),STRING*(MXCH)
      LOGICAL END

!     Parameter Declarations
      INCLUDE 'parameters.inc'

      CALL ENTERS('FEM',*9999)

      IF(FIRST_FEM.OR.REALLOCATE_FEM) THEN

C ***   DPN - Initialise time variable stuff
C MLB Init in FEMINI, NOT here!!!
C        TV_NUM_VARIABLES=0

        IF(FIRST_FEM) THEN
          DO i=1,NXM
            FIRSTS(i)=.TRUE.
          ENDDO

C cpb 4/2/97 Check NRCM

          IF(NRCM.LT.2) THEN
            WRITE(OP_STRING,'('' >>Warning: NRCM < 2'')')
            CALL WRITES(IOOP,OP_STRING,ERROR,*9999)
          ENDIF

C cpb 7/2/96 Initialisation of the M variables (e.g. NPM) is now done
C in SYNTAX

C cpb 5/2/96 Adding dynamic memory allocation

C***      Variables
          CELL_NUM_VARIANTS=0

C***      Initialise pointers
          DIPOLE_CEN_NTIME_PTR=0
          DIPOLE_DIR_NTIME_PTR=0
          DIPOLE_LIST_PTR=0
          FD_PTR=0
          IBT_PTR=0
          ICQS_PTR=0
          ICQS_SPATIAL_PTR=0
          IICQS_SPATIAL_PTR=0
          IDO_PTR=0
          ILPIN_PTR=0
          ILTIN_PTR=0
          INP_PTR=0
          ISC_GD_PTR=0
          DO i=1,9
            ISC_GK_PTR(i)=0
          ENDDO
          ISC_GKK_PTR=0
          ISC_GM_PTR=0
          ISC_GMM_PTR=0
          DO i=1,9
            ISC_GQ_PTR(i)=0
          ENDDO
          ISR_GD_PTR=0
          DO i=1,9
            ISR_GK_PTR(i)=0
          ENDDO
          ISR_GKK_PTR=0
          ISR_GM_PTR=0
          ISR_GMM_PTR=0
          DO i=1,9
            ISR_GQ_PTR(i)=0
          ENDDO
          ISALIG_PTR=0
          ISAXES_PTR=0
          ISBASE_PTR=0
          ISCLOC_PTR=0
          ISCONO_PTR=0
          ISCONT_PTR=0
          ISCROS_PTR=0
          ISDANO_PTR=0
          ISDAPR_PTR=0
          ISDATA_PTR=0
          ISDATR_PTR=0
          ISDIPO_PTR=0
          ISDIPA_PTR=0
          ISELNO_PTR=0
          ISERR_PTR=0
          ISFACE_PTR=0
          ISFANO_PTR=0
          ISFIBR_PTR=0
          ISFIEL_PTR=0
          ISGAUS_PTR=0
          ISGRID_PTR=0
          ISGRAD_PTR=0
          ISHIST_PTR=0
          ISINCR_PTR=0
          ISISOC_PTR=0
          ISIZE_MFI_PTR=0
          ISIZE_PHI_PTR=0
          ISIZE_PHIH_PTR=0
          ISIZE_TBH_PTR=0
          ISLEAD_PTR=0
          ISLINE_PTR=0
          ISLINO_PTR=0
          ISL2BE_PTR=0
          ISL3BE_PTR=0
          ISMAP_PTR=0
          ISMATE_PTR=0
          ISNONO_PTR=0
          ISN2BE_PTR=0
          ISN3BE_PTR=0
          ISOBJE_PTR=0
          ISPLIN_PTR=0
          ISPLOT_PTR=0
          ISPLOTXY_PTR=0
          ISPMAR_PTR=0
          ISPROF_PTR=0
          ISREAC_PTR=0
          ISRESI_PTR=0
          ISRULE_PTR=0
          ISSCAL_PTR=0
          ISSECT_PTR=0
          ISSHEE_PTR=0
          ISSTRA_PTR=0
          ISSTRE_PTR=0
          ISSTRM_PTR=0
          ISSURF_PTR=0
          ISVELO_PTR=0
          ITHRES_PTR=0
          LD_PTR=0
          LD_NP_PTR=0
          LDR_PTR=0
          LIST_PTR=0
          LGE_PTR=0
          LN_PTR=0
          MAP_ART_VEIN_PTR=0
          MXI_PTR=0
          NAN_PTR=0
          NBH_PTR=0
          NBHF_PTR=0
          NBJ_PTR=0
          NBJF_PTR=0
          NDADJ_PTR=0
          NDDATA_PTR=0
          NDDL_PTR=0
          NDET_PTR=0
          NDIPOLES_PTR=0
          NDLT_PTR=0
          NDP_PTR=0
          NEELEM_PTR=0
          NEL_PTR=0
          NELIST_PTR=0
          NELIST2_PTR=0
          NELIST3_PTR=0
          NENFVC_PTR=0
          NENP_PTR=0
          NENQ_PTR=0
          NEP_PTR=0
          NFF_PTR=0
          NFFACE_PTR=0
          NFLIST_PTR=0
          NFLIST1_PTR=0
          NFVC_PTR=0
          NGAP_PTR=0
          NGLIST_PTR=0
          NHE_PTR=0
          NHP_PTR=0
          NHQ_PTR=0
          NKB_PTR=0
          NKEF_PTR=0
          NKH_PTR=0
          NKHE_PTR=0
          NKJ_PTR=0
          NKJE_PTR=0
          NLCHOR_PTR=0
          NLF_PTR=0
          NLL_PTR=0
          NLLINE_PTR=0
          NLLIST_PTR=0
          NLNO_PTR=0
          NLQ_PTR=0
          NLS_NDATA_CONT_PTR=0
          NLS_NDATA_IMAG_PTR=0
          NMBIN_PTR=0
          NMNO_PTR=0
          NNB_PTR=0
          NNF_PTR=0
          NNL_PTR=0
          NODENVC_PTR=0
          NODENVCB_PTR=0
          NONL_PTR=0
          NONM_PTR=0
          NONY_PTR=0
          NORD_PTR=0
          NP1OPT_PTR=0
          NP2OPT_PTR=0
          NP3OPT_PTR=0
          NPB_PTR=0
          NPF_PTR=0
          NPINTER_PTR=0
          NP_INTERFACE_PTR=0
          NPL_PTR=0
          NPLIST1_PTR=0
          NPLIST2_PTR=0
          NPLIST3_PTR=0
          NPLIST4_PTR=0
          NPLIST5_PTR=0
          NPNE_PTR=0
          NPNF_PTR=0
          NPNODE_PTR=0
          NPNY_PTR=0
          NPQ_PTR=0
          NQET_PTR=0
          NQGP_PTR=0
          NQGP_PIVOT_PTR=0
          NQLIST_PTR=0
          NQNE_PTR=0
          NQNP_PTR=0
          NQNY_PTR=0
          NQS_PTR=0
          NQSCNB_PTR=0
          NQXI_PTR=0
          NRE_PTR=0
          NRLIST_PTR=0
          NRLIST2_PTR=0
          NSB_PTR=0
          NTCOVA_PTR=0
          NTIME_INTERP_PTR=0
          NTIME_POINTS_PTR=0
          NTIME_NR_PTR=0
          TV_BC_SET_PTR=0
          NVCB_PTR=0
          NUNK_PTR=0
          NVCNODE_PTR=0
          NVCNP_PTR=0
          NVHE_PTR=0
          NVHF_PTR=0
          NVHP_PTR=0
          NVJE_PTR=0
          NVJF_PTR=0
          NVJL_PTR=0
          NVJP_PTR=0
          NAQ_PTR=0
          NW_PTR=0
          NWP_PTR=0
          NWQ_PTR=0
          NXI_PTR=0
          NXLIST_PTR=0
          NXQ_PTR=0
          NYNE_PTR=0
          NYNO_PTR=0
          NYNP_PTR=0
          NYNQ_PTR=0
          NYNR_PTR=0
          NYNY_PTR=0
          NYQNR_PTR=0
          PAOPTY_PTR=0
c          PN_TEMP_PTR=0
          IPIVOT_PTR=0
          VOLTC_PTR=0
          Z_CONT_LIST_PTR=0

C*** Reals
          ACINUS_PTR=0
          AQ_PTR=0
          BBM_PTR=0
          CE_PTR=0
          CELL_CP_PTR=0
          CELL_ICQS_NAMES_PTR=0
          CELL_ICQS_SPATIAL_PTR=0
          CELL_ICQS_VALUE_PTR=0
          CELL_RCQS_NAMES_PTR=0
          CELL_RCQS_SPATIAL_PTR=0
          CELL_RCQS_VALUE_PTR=0
          CELL_YQS_NAMES_PTR=0
          CELL_YQS_SPATIAL_PTR=0
          CELL_YQS_VALUE_PTR=0
          CG_PTR=0
          CGE_PTR=0
          CIN_PTR=0
          CONY_PTR=0
          COVA_PTR=0
          CP_PTR=0
          CQ_PTR=0
          CURVCORRECT_PTR=0
          CYNO_PTR=0
          CYNY_PTR=0
          DET_PTR=0
          DF_PTR=0
          DIPOLE_CEN_PTR=0
          DIPOLE_DIR_PTR=0
          DL_PTR=0
          DLL_PTR=0
          DRDN_PTR=0
          DRDNO_PTR=0
          D_RE_PTR=0
          D_RI3_PTR=0
          D_RP_PTR=0
          D_TG_PTR=0
          D_ZG_PTR=0
          DXDXIQ_PTR=0
          DXDXIQ2_PTR=0
          DNUDXQ_PTR=0
          ED_PTR=0
          EDD_PTR=0
          EIGVAL_PTR=0
          EIGVEC_PTR=0
          EM_PTR=0
          ER_PTR=0
          ES_PTR=0
          FEXT_PTR=0
          GCHQ_PTR=0
          GD_PTR=0
          DO i=1,9
            GK_PTR(i)=0
          ENDDO
          GKK_PTR=0
          GM_PTR=0
          GMM_PTR=0
          DO i=1,9
            GQ_PTR(i)=0
          ENDDO
          GRR_PTR=0
          GR_PTR=0
          GUQ_PTR=0
          LAPL_PTR=0
          LAPLSQR_PTR=0
          MFI_PTR=0
          NEERR_PTR=0
          NLS_SURF_XI_PTR=0
          NLS_SURF_PSI_PTR=0
          NQGW_PTR=0
          PE_PTR=0
          PF_PTR=0
          PG_PTR=0
          PGNQE_PTR=0
          PHI_PTR=0
          PHI_H_PTR=0
          PHI_H_EXACT_PTR=0
          PROPQ_PTR=0
          RAD_PTR=0
          RCQS_PTR=0
          RCQS_SPATIAL_PTR=0
          IRCQS_SPATIAL_PTR=0
          RD_PTR=0
          RE1_PTR=0
          RE2_PTR=0
          REG_PARAMETER_PTR=0
          RG_PTR=0
          RHS_PTR=0
          SE_PTR=0
          SF_PTR=0
          SP_PTR=0
          SIGMA_PHI_PTR=0
          SIGMA_T_BH_PTR=0
          SQ_PTR=0
          T_BH_PTR=0
          T_BH_INV_PTR=0
          THRES_PTR=0
          TIME_VALUES_PTR=0
          TIME_VARIABLE_NAMES_PTR=0
          U_PHI_PTR=0
          U_T_BH_PTR=0
          VC_PTR = 0
C TVK 18/05/2000
          VC_INIT_PTR=0
          VOL_PTR=0
          VOLT_PTR=0
          VT_PHI_PTR=0
          VT_T_BH_PTR=0
          WD_PTR=0
          WDL_PTR=0
          WG_PTR=0
          WK1_INV_PTR=0
          WK2_INV_PTR=0
          WK3_INV_PTR=0
          WK4_INV_PTR=0
          WK5_INV_PTR=0
          WU_PTR=0
          XA_PTR=0
          XAB_PTR=0
          XB_PTR=0
          XE_PTR=0
          XG_PTR=0
          XG1_PTR=0
          XID_PTR=0
          XIDL_PTR=0
          XIG_PTR=0
          XIP_PTR=0
          XIQ_PTR=0
          XN_PTR=0
          XN_GRAD_PTR=0
          XNFV_PTR = 0
          XO_PTR=0
          XP_PTR=0
          XR_PTR=0
          XR_GRAD_PTR=0
          YD_PTR=0
          XQ_PTR=0
          YG_PTR=0
          YGF_PTR=0
          YP_PTR=0
          YQ_PTR=0
          YQS_PTR=0
          ZA_PTR=0
          ZA1_PTR=0
          ZC_PTR=0
          Z_CONT_PTR=0
          ZCROSSING_PTR=0
          ZD_PTR=0
          ZD2_PTR=0
          ZDD_PTR=0
          ZDL_PTR=0
          ZE_PTR=0
          ZF_PTR=0
          ZG_PTR=0
          ZG1_PTR=0
          ZNFV_PTR=0
          ZP_PTR=0
          ZP1_PTR=0
          FIX_PTR=0
          FIXP_PTR=0
          FIXQ_PTR=0
        ENDIF

C***    Allocate memory

C***    Asserts needed so arrays can drop dimension
        CALL ASSERT(NAM.GT.0,'>>NAM must be 1 or more',ERROR,*9999)
        CALL ASSERT(NFM.GT.0,'>>NFM must be 1 or more',ERROR,*9999)
        CALL ASSERT(NOM.GT.0,'>>NOM must be 1 or more',ERROR,*9999)
        CALL ASSERT(NQM.GT.0,'>>NQM must be 1 or more',ERROR,*9999)
        CALL ASSERT(NYM.GT.0,'>>NYM must be 1 or more',ERROR,*9999)
        CALL ASSERT(NYQM.GT.0,'>>NYQM must be 1 or more',ERROR,*9999)
        CALL ASSERT(NY_R_M.GT.0,'>>NY_R_M must be 1 or more',
     '    ERROR,*9999)
        CALL ASSERT(NZ_GKK_M.GT.0,'>>NZ_GKK_M must be 1 or more',
     '    ERROR,*9999)
        CALL ASSERT(NISC_GKKM.GT.0,'>>NISC_GKKM must be 1 or more',
     '    ERROR,*9999)
        CALL ASSERT(NISR_GKKM.GT.0,'>>NISR_GKKM must be 1 or more',
     '    ERROR,*9999)

C***    INTEGER's
        CALL ALLOCATE_MEMORY(NQIM*NQVM*USE_CELL,0,INTTYPE,
     '    CELL_ICQS_SPATIAL_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQIM*NQVM*USE_CELL,0,DPTYPE,
     '    CELL_ICQS_VALUE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQRM*NQVM*USE_CELL,0,INTTYPE,
     '    CELL_RCQS_SPATIAL_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIQSM*NQVM*USE_CELL,0,INTTYPE,
     '    CELL_YQS_SPATIAL_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NDIPOLEM*NRM*NXM*USE_DIPOLE,0,INTTYPE,
     '    DIPOLE_CEN_NTIME_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NDIPOLEM*NRM*NXM*USE_DIPOLE,0,INTTYPE,
     '    DIPOLE_DIR_NTIME_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((1+NDIPOLEM)*USE_DIPOLE*USE_GRAPHICS,0,
     '    INTTYPE,DIPOLE_LIST_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NDM*USE_DATA,0,INTTYPE,FD_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NEGM+1)*USE_GAUSS_PT_MATERIALS,
     '    0,INTTYPE,GRNGLIST_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*NIM*NBFM,1,INTTYPE,IBT_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQIM*NQM*USE_CELL,0,INTTYPE,ICQS_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NQISVM+1)*NQVM*USE_CELL,0,INTTYPE,
     '    IICQS_SPATIAL_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQISVM*NQM*USE_CELL,0,INTTYPE,
     '    ICQS_SPATIAL_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NKM*NNM*(NIM+1)*NBFM,1,INTTYPE,
     '    IDO_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NMM*NRM*NXM*USE_NONLIN,NXM*USE_NONLIN,
     '    DPTYPE,ILPIN_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NRM*NXM*USE_NONLIN,NXM*USE_NONLIN,DPTYPE,
     '    ILTIN_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NNM*NIM*NBFM,1,INTTYPE,INP_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NISC_GDM*USE_SPARSE,0,INTTYPE,ISC_GD_PTR,
     '    MEM_INIT,ERROR,*9999)

C MLB moving GK allocation to use only as required
C        CALL ALLOCATE_MEMORY(NISC_GKM*USE_SPARSE,0,INTTYPE,
C     '    ISC_GK_PTR(1),MEM_INIT,ERROR,*9999)

        CALL ALLOCATE_MEMORY(NISC_GKKM*NXM*USE_SPARSE,0,INTTYPE,
     '    ISC_GKK_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NISC_GMM*USE_SPARSE,0,INTTYPE,ISC_GM_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NISC_GMMM*USE_SPARSE,0,INTTYPE,
     '    ISC_GMM_PTR,MEM_INIT,ERROR,*9999)

C MLB moving GQ allocation to use only as required
C        CALL ALLOCATE_MEMORY(NISC_GQM*USE_SPARSE,0,INTTYPE,
C     '    ISC_GQ_PTR(1),MEM_INIT,ERROR,*9999)

        CALL ALLOCATE_MEMORY(NISR_GDM*USE_SPARSE,0,INTTYPE,ISR_GD_PTR,
     '    MEM_INIT,ERROR,*9999)

C MLB moving GK allocation to use only as required
C        CALL ALLOCATE_MEMORY(NISR_GKM*USE_SPARSE,0,INTTYPE,
C     '    ISR_GK_PTR(1),MEM_INIT,ERROR,*9999)

        CALL ALLOCATE_MEMORY(NISR_GKKM*NXM*USE_SPARSE,0,INTTYPE,
     '    ISR_GKK_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NISR_GMM*USE_SPARSE,0,INTTYPE,ISR_GM_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NISR_GMMM*USE_SPARSE,0,INTTYPE,
     '    ISR_GMM_PTR,MEM_INIT,ERROR,*9999)

C MLB moving GQ allocation to use only as required
C        CALL ALLOCATE_MEMORY(NISR_GQM*USE_SPARSE,0,INTTYPE,
C     '    ISR_GQ_PTR(1),MEM_INIT,ERROR,*9999)

        CALL ALLOCATE_MEMORY(NWM*USE_GRAPHICS,0,INTTYPE,ISALIG_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*NSSM,1,INTTYPE,ISIZE_MFI_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(2,1,INTTYPE,ISIZE_PHI_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(2,1,INTTYPE,ISIZE_PHIH_PTR,MEM_INIT,
     '    ERROR,*9999)

        CALL ALLOCATE_MEMORY(NWM*USE_GRAPHICS,0,INTTYPE,ISAXES_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(99*USE_GRAPHICS,0,INTTYPE,ISBASE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*USE_GRAPHICS,0,INTTYPE,ISCLOC_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NEM*USE_GRAPHICS,0,INTTYPE,ISCONO_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NEM*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISCONT_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISCROS_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NEM*USE_GRAPHICS,0,INTTYPE,ISDANO_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NEM*USE_GRAPHICS,0,INTTYPE,ISDAPR_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NGRSEGM*USE_GRAPHICS*USE_DATA,0,
     '    INTTYPE,ISDATA_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NEM*USE_GRAPHICS,0,INTTYPE,ISDATR_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NDIPOLEM*NGRSEGM*USE_GRAPHICS*
     '    USE_DIPOLE,0,INTTYPE,ISDIPO_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NDIPOLEM*NGRSEGM*USE_GRAPHICS*
     '    USE_DIPOLE,0,INTTYPE,ISDIPA_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NEM*USE_GRAPHICS,0,INTTYPE,ISELNO_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NEM*USE_GRAPHICS,0,INTTYPE,ISERR_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NFM*USE_GRAPHICS,0,INTTYPE,ISFACE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NFM*USE_GRAPHICS,0,INTTYPE,ISFANO_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NEM*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISFIBR_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NEM*USE_GRAPHICS,0,INTTYPE,ISFIEL_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NGM*NEM*USE_GRAPHICS,0,INTTYPE,
     '    ISGAUS_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*USE_GRAPHICS*USE_GRID,0,INTTYPE,
     '    ISGRID_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NEM*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISGRAD_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NPM+1)*USE_GRAPHICS,0,INTTYPE,ISHIST_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*USE_GRAPHICS,0,INTTYPE,ISINCR_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*USE_GRAPHICS,0,INTTYPE,ISISOC_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(2,1,INTTYPE,ISIZE_TBH_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NUMLEADMX+1)*USE_GRAPHICS,0,INTTYPE,
     '    ISLEAD_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*2*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISLINE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*USE_GRAPHICS,0,INTTYPE,ISLINO_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NLM*USE_GRAPHICS,0,INTTYPE,ISL2BE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NLM*USE_GRAPHICS,0,INTTYPE,ISL3BE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NGRSEGM*USE_GRAPHICS,0,INTTYPE,ISMAP_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NEM*USE_GRAPHICS,0,INTTYPE,ISMATE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NPM*USE_GRAPHICS,0,INTTYPE,ISNONO_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NLM*USE_GRAPHICS,0,INTTYPE,ISN2BE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NLM*USE_GRAPHICS,0,INTTYPE,ISN3BE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NGRSEGM*NGRSEGM*USE_GRAPHICS,0,
     '    INTTYPE,ISOBJE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISPLIN_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*(NEM+1)*NGRSEGM*USE_GRAPHICS,0,
     '    INTTYPE,ISPLOT_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(2*USE_GRAPHICS,0,INTTYPE,ISPLOTXY_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*USE_GRAPHICS,0,INTTYPE,ISPMAR_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(USE_GRAPHICS*2,0,INTTYPE,ISPROF_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*USE_GRAPHICS,0,INTTYPE,ISREAC_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*USE_GRAPHICS,0,INTTYPE,ISRESI_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*USE_GRAPHICS,0,INTTYPE,ISRULE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISSCAL_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NGRSEGM*USE_GRAPHICS,0,INTTYPE,ISSECT_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NEM*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISSHEE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NEM*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISSTRA_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NEM*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISSTRE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NEM*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISSTRM_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NWM*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISSURF_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NEM*NGRSEGM*USE_GRAPHICS,0,INTTYPE,
     '    ISVELO_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*NGM*NEM*USE_GRID,
     '    0,INTTYPE,ITHRES_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NDM*USE_DATA,0,INTTYPE,LD_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NDM*USE_DATA*USE_LUNG,1,INTTYPE,
     '    LD_NP_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NDM+1)*USE_DATA,USE_DATA,INTTYPE,
     '    LDR_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NLISTM+1),1,INTTYPE,LIST_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NSM*NRCM,1,INTTYPE,LGE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NEM+1)*USE_DATA,USE_DATA,INTTYPE,LN_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NDM+1)*NRM*USE_DATA*USE_LUNG*USE_GRID,1,
     &    INTTYPE,MAP_ART_VEIN_PTR,MEM_INIT,ERROR,*9999)        
        CALL ALLOCATE_MEMORY(2*NEM,1,INTTYPE,MXI_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIM*NAM*NBFM,NBFM,INTTYPE,NAN_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NCM*NEM,1,INTTYPE,NBH_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NCM*NFM,1,INTTYPE,NBHF_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NEM,1,INTTYPE,NBJ_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NFM,1,INTTYPE,NBJF_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NDM*6*USE_DATA*USE_LUNG,1,
     '    INTTYPE,NDADJ_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NDM+1)*(NRM+1)*USE_DATA,USE_DATA,
     '    INTTYPE,NDDATA_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NEM*NDEM*USE_DATA,0,INTTYPE,NDDL_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NBFM*(NNM+1)*USE_BEM,0,INTTYPE,NDET_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NRM*NXM,0,INTTYPE,NDIPOLES_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NEM*USE_DATA,0,INTTYPE,NDLT_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NDM*USE_DATA,0,INTTYPE,NDP_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NE_R_M+1)*(NRM+1),1,INTTYPE,NEELEM_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NELM+1)*NLM,1,INTTYPE,NEL_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NEM+1),1,INTTYPE,NELIST_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NEM+1),1,INTTYPE,NELIST2_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NEM+1)*USE_TRANSFER,USE_TRANSFER,INTTYPE,
     '    NELIST3_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(USE_VORONOI*(NFVCM+1)*NFVM,
     '    0,INTTYPE,NENFVC_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NPM*(NEPM+1)*(NRM+1),1,INTTYPE,NENP_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(9*NQM*USE_GRID,0,INTTYPE,NENQ_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NPM,1,INTTYPE,NEP_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(6*NEM,1,INTTYPE,NFF_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NF_R_M+1)*NRM,1,INTTYPE,NFFACE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NFM+1),1,INTTYPE,NFLIST_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NFM+1),1,INTTYPE,NFLIST1_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(USE_VORONOI*2*(NFVCM+1)*NVCM,0,INTTYPE,
     '    NFVC_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIM*NBM,1,INTTYPE,NGAP_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NGM+1),1,INTTYPE,NGLIST_PTR,MEM_INIT,
     '    ERROR,*9999)
C LKC 10-JAN-2006 Unused
C        !DPN 24/02/2004 Using NQEM+1 rather than 27+1 for futute
C        !expansion beyond local quadratic elements
C        CALL ALLOCATE_MEMORY(NGM*(NQEM+1)*NQSCM*USE_GRID,0,INTTYPE,
C     &    NGNQE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NEM*NXM,1,INTTYPE,NHE_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NPM*(NRM+1)*NXM,1,INTTYPE,NHP_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NRM*NXM*USE_GRID,0,INTTYPE,
     '    NHQ_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(2*2*2*NNM*NBFM,1,INTTYPE,NKB_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((4+1)*16*6*NBFM,1,INTTYPE,NKEF_PTR,
     '    MEM_INIT,ERROR,*9999)
C KAT 26feb01: temporary array does not need to be retained
C        CALL ALLOCATE_MEMORY(NKM*NNM*NBFM,1,INTTYPE,NKF_PTR,
C     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NPM*NCM*(NRM+1),1,INTTYPE,NKH_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NKM*NNM*NHM*NEM,1,INTTYPE,NKHE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NPM,1,INTTYPE,NKJ_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NKM*NNM*NJM*NEM,1,INTTYPE,NKJE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((10+1)*NRM,1,INTTYPE,NLCHOR_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(4*NFM,1,INTTYPE,NLF_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(12*NEM,1,INTTYPE,NLL_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NL_R_M+1)*(NRM+1),1,INTTYPE,NLLINE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NLM+1),1,INTTYPE,NLLIST_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NOPM*NXM*USE_OPTI,NXM*USE_OPTI,INTTYPE,
     '    NLNO_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQM*USE_GRID,USE_GRID,INTTYPE,
     '    NLQ_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NDM*USE_NLSTRIPE,0,INTTYPE,
     '    NLS_NDATA_CONT_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NDM*USE_NLSTRIPE,0,INTTYPE,
     '    NLS_NDATA_IMAG_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NMM*NRM*NXM*USE_NONLIN,NXM*USE_NONLIN,
     '    DPTYPE,NMBIN_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(2*(NOPM+1)*NXM*USE_OPTI,NXM*USE_OPTI,
     '    INTTYPE,NMNO_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(4*4*4*NBFM,1,INTTYPE,NNB_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((17+1)*6*NBFM,1,INTTYPE,NNF_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(5*12*NBFM,1,INTTYPE,NNL_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(USE_VORONOI*NVCM,0,INTTYPE,
     '    NODENVC_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(USE_VORONOI*NVCBM,0,INTTYPE,
     '    NODENVCB_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NLM*NXM*USE_OPTI,NXM*USE_OPTI,INTTYPE,
     '    NONL_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NMM*NPM*NXM*USE_OPTI,NXM*USE_OPTI,
     '    INTTYPE,NONM_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NOYM+1)*NYM*NRCM*(NRM+1)*NXM,NXM,INTTYPE,
     '    NONY_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(5*NE_R_M*USE_LUNG,1,INTTYPE,
     '    NORD_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NOPM,1,INTTYPE,NP1OPT_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NOPM,1,INTTYPE,NP2OPT_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NOPM,1,INTTYPE,NP3OPT_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NP_R_M+1)*5*USE_BEM,USE_BEM,INTTYPE,
     '    NPB_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(9*NFM,1,INTTYPE,NPF_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*(20+1),1,INTTYPE,NPINTER_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NPM+1)*(3+1),1,INTTYPE,NP_INTERFACE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(5*4*NLM,1,INTTYPE,NPL_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NPM+1),1,INTTYPE,NPLIST1_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NPM+1),1,INTTYPE,NPLIST2_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NPM+1)*USE_TRANSFER,USE_TRANSFER,INTTYPE,
     '    NPLIST3_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NPM+1)*USE_TRANSFER,USE_TRANSFER,INTTYPE,
     '    NPLIST4_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NPM+1)*USE_TRANSFER,USE_TRANSFER,INTTYPE,
     '    NPLIST5_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NNM*NBFM*NEM,1,INTTYPE,NPNE_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NNM*NBFM,1,INTTYPE,NPNF_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NP_R_M+1)*(NRM+1),1,INTTYPE,NPNODE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((6+1)*NYM*(NRCM+1)*NXM,NXM,INTTYPE,
     '    NPNY_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQM*USE_GRID,0,INTTYPE,NPQ_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQSCM,0,INTTYPE,NQET_PTR,MEM_INIT,ERROR,
     '    *9999)        
        CALL ALLOCATE_MEMORY((NQGM+1)*NQM*USE_GRID,0,INTTYPE,NQGP_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQGM*NQM*USE_GRID,0,INTTYPE,NQGP_PIVOT_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NQM+1)*USE_GRID,0,INTTYPE,NQLIST_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NPM*USE_GRID,0,INTTYPE,NQNP_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(2*NYQM*(NRCM+1)*NXM*USE_GRID,0,
     '    INTTYPE,NQNY_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQSCM*USE_GRID,0,INTTYPE,NQSCNB_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NIM+1)*NQSCM*USE_GRID,USE_GRID,INTTYPE,
     '    NQXI_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NEM,1,INTTYPE,NRE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NRM+1),1,INTTYPE,NRLIST_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NRM+1),1,INTTYPE,NRLIST2_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NKM*NNM*NBFM,1,INTTYPE,NSB_PTR,MEM_INIT,
     '    ERROR,*9999)
C LKC 15-JUN-1999 Adding *USE_GRAPHICS
        CALL ALLOCATE_MEMORY(NEM*USE_GRAPHICS,USE_GRAPHICS,INTTYPE,
     '    NTCOVA_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NTIMEVARSM,0,INTTYPE,NTIME_INTERP_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NTIMEVARSM,0,INTTYPE,NTIME_POINTS_PTR,
     '    MEM_INIT,ERROR,*9999)
C KSB adding new array NTIME_NR to store time dep B.Cs in regions
        CALL ALLOCATE_MEMORY((NTIMEVARSM+1)*NRM,0,INTTYPE,NTIME_NR_PTR,
     &    MEM_INIT,ERROR,*9999)                
C *** DPN 09 June 2000 - Moving TV_BC_SET from time_variable.cmn so
C ***   can allocate for all grid points. Using USE_CELL for now,
C ***   maybe should have a USE_TIME or USE_CONRTOL_CURVE ???
        CALL ALLOCATE_MEMORY(USE_CELL*(NQM+1)*(NIQSM+1),0,INTTYPE,
     '    TV_BC_SET_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NKM*NJM*NPM,1,INTTYPE,NUNK_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(USE_VORONOI*5*NVCBM,0,INTTYPE,NVCB_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(USE_VORONOI*2*NP_R_M,0,INTTYPE,
     '    NVCNODE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(USE_VORONOI*USE_LUNG*NP_R_M,1,INTTYPE,
     '    NVCNP_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NNM*NBFM*NHM*NEM,1,INTTYPE,NVHE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NNM*NBFM*NHM,1,INTTYPE,NVHF_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NPM*NCM*(NRM+1),1,INTTYPE,NVHP_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NNM*NBFM*NJM*NEM,1,INTTYPE,NVJE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NNM*NBFM*NJM,1,INTTYPE,NVJF_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(4*NJM*NLM,1,INTTYPE,NVJL_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NPM,1,INTTYPE,NVJP_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQM*NAM*USE_GRID,0,INTTYPE,NAQ_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NEM*3*NXM,1,INTTYPE,NW_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NPM*2,1,INTTYPE,NWP_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(8*(NQM+1)*NAM*USE_GRID,USE_GRID,INTTYPE,
     '    NWQ_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((2*NIM+1)*(NEM+1)*(NEIM+1),1,INTTYPE,
     '    NXI_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NXM+1),1,INTTYPE,NXLIST_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((2*NIM+1)*5*(NQM+1)*NAM*USE_GRID,
     '    USE_GRID,INTTYPE,NXQ_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NAM*NHM*(NRCM+1)*NCM*NEM,1,INTTYPE,
     '    NYNE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NYOM+1)*NOOPM*NRCM*(NRM+1)*NXM,NXM,
     '    INTTYPE,NYNO_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NKM*NVM*NHM*NPM*(NRCM+1)*NCM*NRM,1,INTTYPE,
     '    NYNP_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NY_R_M+1)*(NRCM+1)*NCM*(NRM+1)*NXM,NXM,
     '    INTTYPE,NYNR_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NYYM+1)*NYM*NRM*NXM*USE_MAPS,1,
     '    INTTYPE,NYNY_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(
     '    (NYQM+1)*(NRCM+1)*NCM*(NRM+1)*NXM*USE_GRID,0,
     '    INTTYPE,NYQNR_PTR,MEM_INIT,ERROR,*9999)
C        CALL ALLOCATE_MEMORY(NORM*USE_LUNG,0,INTTYPE,NE_OLD_PTR,
C     '    MEM_INIT,ERROR,*9999)
C        CALL ALLOCATE_MEMORY(NORM*USE_LUNG,0,INTTYPE,NE_TEMP_PTR,
C     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NQM*(NRCM+1)*NXM*USE_GRID,0,
     '    INTTYPE,NYNQ_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NOPM*USE_OPTI,0,INTTYPE,PAOPTY_PTR,
     '    MEM_INIT,ERROR,*9999)
C        CALL ALLOCATE_MEMORY(NE_R_M*USE_LUNG,0,INTTYPE,PN_TEMP_PTR,
C     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NOM*(1-USE_LUNG),1,INTTYPE,IPIVOT_PTR,
     '    MEM_INIT,ERROR,*9999)
C LKC 6-FEB-98 VOLTC
        CALL ALLOCATE_MEMORY(NBFM,1,INTTYPE,VOLTC_PTR,MEM_INIT,
     '    ERROR,*9999)
C*** 19/02/08 JHC increased array size
C        CALL ALLOCATE_MEMORY(NDM*2*4,1,INTTYPE,Z_CONT_LIST_PTR,
C     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NDM*2*7,1,INTTYPE,Z_CONT_LIST_PTR,
     '    MEM_INIT,ERROR,*9999)

C***    REAL's
C***    REAL*8's
        CALL ALLOCATE_MEMORY(4*NEM*USE_LUNG,0,DPTYPE,ACINUS_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NMAQM*NQM*USE_GRID,0,DPTYPE,AQ_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(2*NEM*USE_LUNG,0,DPTYPE,BBM_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NMM*NEM*NXM,NXM,DPTYPE,CE_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NMQM*NPM*USE_CELL,0,DPTYPE,
     '    CELL_CP_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQRM*NQVM*USE_CELL,0,DPTYPE,
     '    CELL_RCQS_VALUE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIQSM*NQVM*USE_CELL,0,DPTYPE,
     '    CELL_YQS_VALUE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NMM*NGM,1,DPTYPE,CG_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NMM*NGM*NEM*NXM*USE_GAUSS_PT_MATERIALS,0,
     '    DPTYPE,CGE_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NMM*(NGM+1)*NNEPM*USE_NONLIN,0,
     '    DPTYPE,CIN_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NOYM+1)*NYM*NRCM*(NRM+1)*NXM,NXM,DPTYPE,
     '    CONY_PTR,MEM_INIT,ERROR,*9999)
C LKC 15-JUN-1999 adding *USE_GRAPHICS
        CALL ALLOCATE_MEMORY(NEM*50*USE_GRAPHICS,USE_GRAPHICS,
     '    DPTYPE,COVA_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NMM*NPM*NXM,NXM,DPTYPE,CP_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NMM*NQM*NXM*USE_GRID,0,DPTYPE,CQ_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(2*2*NNM*NEM*USE_BEM,0,DPTYPE,
     '    CURVCORRECT_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NYOM+1)*NOOPM*NRCM*(NRM+1)*NXM,NXM,DPTYPE,
     '    CYNO_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NYYM+1)*NYM*NRM*NXM*USE_MAPS
     '    ,NXM,DPTYPE,CYNY_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NBFM*(NNM+1)*NGM*6*USE_BEM,USE_BEM,
     '    DPTYPE,DET_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NFM,1,DPTYPE,DF_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(4*(NDIPTIMM+1)*NDIPOLEM*NRM*NXM*
     '    USE_DIPOLE,0,DPTYPE,DIPOLE_CEN_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(4*(NDIPTIMM+1)*NDIPOLEM*NRM*NXM*
     '    USE_DIPOLE,0,DPTYPE,DIPOLE_DIR_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*NLM,1,DPTYPE,DL_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*NLM,1,DPTYPE,DLL_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NGM*USE_BEM,0,DPTYPE,DRDN_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NGM*NKM*USE_BEM,0,DPTYPE,DRDNO_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NSM*NHM*NOPM*USE_NONLIN,0,DPTYPE,D_RE_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NSM*USE_NONLIN,0,DPTYPE,D_RI3_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NYM*NYM*USE_NONLIN,0,DPTYPE,D_RP_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*3*NHM*NSM*USE_NONLIN,0,DPTYPE,D_TG_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NUM*NHM*NSM*USE_NONLIN,0,DPTYPE,
     '    D_ZG_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*3*NQM*USE_GRID,0,DPTYPE,DXDXIQ_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*3*NQM*USE_GRID,0,DPTYPE,DXDXIQ2_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*3*NQM*USE_GRID,0,DPTYPE,DNUDXQ_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NSM*NHM*NSM,1,DPTYPE,ED_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NDM*USE_DATA,0,DPTYPE,EDD_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NTM*2,1,DPTYPE,EIGVAL_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NOM*NTM*2,1,DPTYPE,EIGVEC_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NSM*NHM*NSM,1,DPTYPE,EM_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NSM,1,DPTYPE,ER_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NSM*NHM*NSM,1,DPTYPE,ES_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIFEXTM*NGM*NEM*USE_NONLIN,0,DPTYPE,
     '    FEXT_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*NQM*USE_GRID,0,DPTYPE,GCHQ_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NZ_GD_M,1,DPTYPE,GD_PTR,MEM_INIT,
     '    ERROR,*9999)

C MLB moving GK allocation to use only as required
C        CALL ALLOCATE_MEMORY(NZ_GK_M,1,DPTYPE,GK_PTR(1),MEM_INIT,
C     '    ERROR,*9999)

        CALL ALLOCATE_MEMORY(NZ_GKK_M*NXM,1,DPTYPE,GKK_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NZ_GM_M,1,DPTYPE,GM_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NZ_GMM_M,1,DPTYPE,GMM_PTR,MEM_INIT,
     '    ERROR,*9999)

C MLB moving GQ allocation to use only as required
C        CALL ALLOCATE_MEMORY(NZ_GQ_M,1,DPTYPE,GQ_PTR(1),MEM_INIT,
C     '    ERROR,*9999)

        CALL ALLOCATE_MEMORY(NOM,1,DPTYPE,GRR_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NYROWM,1,DPTYPE,GR_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*3*NQM*USE_GRID,0,DPTYPE,GUQ_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NY_TRANSFER_M*USE_TRANSFER,
     '    0,DPTYPE,LAPL_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NY_TRANSFER_M*USE_TRANSFER,
     '    0,DPTYPE,LAPLSQR_PTR,MEM_INIT,ERROR,*9999)

C LKC 12-JUL-1999 removing allocation for now
C        CALL ALLOCATE_MEMORY(NEM*3,1,DPTYPE,NEERR_PTR,MEM_INIT,
C     '      ERROR,*9999)
        CALL ALLOCATE_MEMORY(0,0,DPTYPE,NEERR_PTR,MEM_INIT,
     '    ERROR,*9999)

        CALL ALLOCATE_MEMORY(NDM*NTSM*3*NSSM*USE_MAGNETIC,0,
     '    DPTYPE,MFI_PTR,MEM_INIT,ERROR,*9999)

        CALL ALLOCATE_MEMORY(3*26*26*4*USE_NLSTRIPE,0,DPTYPE,
     '    NLS_SURF_XI_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQGM*NQM*USE_GRID,0,DPTYPE,NQGW_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((16*26*26*3*4)*USE_NLSTRIPE,0,DPTYPE,
     '    NLS_SURF_PSI_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(2*NEM,1,DPTYPE,PE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(2*NEM*USE_NONLIN,0,DPTYPE,PF_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NSM*NUM*NGM*NBM,1,DPTYPE,PG_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NGM*NQEM*NQSCM*USE_GRID,0,DPTYPE,
     '    PGNQE_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NTSM*USE_TIME,
     '    0,DPTYPE,PHI_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NTSM*USE_TRANSFER*USE_TIME,
     '    0,DPTYPE,PHI_H_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NTSM*USE_TRANSFER*USE_TIME,
     '    0,DPTYPE,PHI_H_EXACT_PTR,MEM_INIT,ERROR,*9999)
C MLT 11May05 Trying to overcome a 64 bit limitation
C on memory allocation
C Old memory allocation
C        CALL ALLOCATE_MEMORY(3*3*4*2*NQM*NXM*USE_GRID,0,DPTYPE,
C     '    PROPQ_PTR,MEM_INIT,ERROR,*9999)
C New allocation that splits request into two integer parts
        CALL BIG_ALLOCATE_MEMORY(3*3*4*2*USE_GRID,NQM*NXM*USE_GRID,0,
     '    DPTYPE,PROPQ_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NGM*USE_BEM,0,DPTYPE,RAD_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQRM*NQM*USE_CELL,0,DPTYPE,RCQS_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY((NQRSVM+1)*NQVM*USE_CELL,0,DPTYPE,
     '    IRCQS_SPATIAL_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQRSVM*NQM*USE_CELL,0,DPTYPE,
     '    RCQS_SPATIAL_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NGM*USE_BEM,0,DPTYPE,RD_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NSM*NHM*USE_NONLIN,0,DPTYPE,RE1_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NSM*NHM*USE_NONLIN,0,DPTYPE,RE2_PTR,
     '    MEM_INIT,ERROR,*9999)
CC JMBs 13-MARCH-2000
       CALL ALLOCATE_MEMORY((NTSM+1)*USE_TRANSFER*USE_TIME,0,DPTYPE,
     '    REG_PARAMETER_PTR,MEM_INIT,ERROR,*9999)
CC JMBe
        CALL ALLOCATE_MEMORY(NGM,1,DPTYPE,RG_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQM*USE_GRID,0,DPTYPE,RHS_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NSM*NBFM*NEM,1,DPTYPE,SE_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NSM*NBFM,1,DPTYPE,SF_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NKM*NBFM*NPM,1,DPTYPE,SP_PTR,MEM_INIT,
     '    ERROR,*9999)
CC AJPs
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*USE_TRANSFER,0,DPTYPE,
     '    SIGMA_PHI_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*USE_TRANSFER,0,DPTYPE,
     '    SIGMA_T_BH_PTR,MEM_INIT,ERROR,*9999)
CC AJPe
        CALL ALLOCATE_MEMORY(NDM*USE_DATA,0,DPTYPE,SQ_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NY_TRANSFER_M*USE_TRANSFER,
     '    0,DPTYPE,T_BH_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NY_TRANSFER_M*USE_TRANSFER,
     '    0,DPTYPE,T_BH_INV_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(3*NGM*NEM*USE_GRID,0,DPTYPE,THRES_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(2*(NTIMEPOINTSM+2)*NTIMEVARSM,0,DPTYPE,
     '    TIME_VALUES_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NY_TRANSFER_M*USE_TRANSFER,
     '    0,DPTYPE,U_PHI_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NY_TRANSFER_M*USE_TRANSFER,
     '    0,DPTYPE,U_T_BH_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(USE_VORONOI*(NVCM+1),1,DPTYPE,VC_PTR,
     '    MEM_INIT,ERROR,*9999)
C TVK 18/05/2000
        CALL ALLOCATE_MEMORY(USE_VORONOI*(NVCM+1),1,DPTYPE,VC_INIT_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NBFM,1,DPTYPE,VOL_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NBFM,1,DPTYPE,VOLT_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NTSM*NTSM*USE_TIME,
     '    0,DPTYPE,VT_PHI_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NY_TRANSFER_M*USE_TRANSFER,
     '    0,DPTYPE,VT_T_BH_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NDM*USE_DATA,0,DPTYPE,WD_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NDEM*USE_DATA,0,DPTYPE,WDL_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NGM*NBM,1,DPTYPE,WG_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NY_TRANSFER_M*USE_TRANSFER,
     '    0,DPTYPE,WK1_INV_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NY_TRANSFER_M*USE_TRANSFER,
     '    0,DPTYPE,WK2_INV_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NY_TRANSFER_M*USE_TRANSFER,
     '    0,DPTYPE,WK3_INV_PTR,MEM_INIT,ERROR,*9999)
C KAT 4Feb99: This doesn't look right
C        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*USE_TRANSFER,DPTYPE,
C     '    1,WK4_INV_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*USE_TRANSFER,0,DPTYPE,
     '    WK4_INV_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NTSM*USE_TRANSFER,0,DPTYPE,WK5_INV_PTR,
     '    MEM_INIT,ERROR,*9999)

C LKC 1-SEPT-1999 Incorrect dimension as WU starts from 0
C        CALL ALLOCATE_MEMORY((NUM+1)*NEM*USE_DATA,0,DPTYPE,
C     '    WU_PTR,MEM_INIT,
C     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY((NUM+2)*NEM*USE_DATA,0,DPTYPE,
     '    WU_PTR,MEM_INIT,ERROR,*9999)

        CALL ALLOCATE_MEMORY(NAM*NJM*NEM,1,DPTYPE,XA_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NORM*NEM*USE_LUNG,0,DPTYPE,XAB_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(2*NJM*NLM,1,DPTYPE,XB_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NSM*NJM,1,DPTYPE,XE_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NUM,1,DPTYPE,XG_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NUM*NGM,1,DPTYPE,XG1_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIM*NDM*USE_DATA,0,DPTYPE,XID_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIM*NDEM*USE_DATA,0,DPTYPE,XIDL_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIM*NGM*NBM,0,DPTYPE,XIG_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIM*NPM,1,DPTYPE,XIP_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIM*NQM*USE_GRID,0,DPTYPE,XIQ_PTR,
     '    MEM_INIT,ERROR,*9999)
! AJP 9/3/99
!        CALL ALLOCATE_MEMORY(NJM*NGM*USE_BEM,0,DPTYPE,XN_PTR,MEM_INIT,
!     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NGM,0,DPTYPE,XN_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NGM*USE_BEM,0,DPTYPE,XN_GRAD_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(USE_VORONOI*NFVM*((NJM*2)+2),0,DPTYPE,
     '    XNFV_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NOM*NXM,NXM,DPTYPE,XO_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NKM*NVM*NJM*NPM,1,DPTYPE,XP_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NGM*USE_BEM,0,DPTYPE,XR_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NGM*USE_BEM,0,DPTYPE,XR_GRAD_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM,1,DPTYPE,YD_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NQM*USE_GRID,0,DPTYPE,XQ_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIYGM*NGM*NEM,1,DPTYPE,YG_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIYGFM*NGFM*NFM,1,DPTYPE,YGF_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NYM*NIYM*NXM,NXM,DPTYPE,YP_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NYQM*NIQM*NAM*NXM*USE_GRID,NXM*USE_GRID,
     '    DPTYPE,YQ_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIQSM*NQM*USE_CELL,0,DPTYPE,YQS_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NAM*NHM*NCM*NEM,1,DPTYPE,ZA_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NAM*NHM*NCM*NEM*USE_NONLIN,0,DPTYPE,
     '    ZA1_PTR,MEM_INIT,ERROR,*9999)
C LKC 12-JUL-1999 adding USE_GRAPHICS
C        CALL ALLOCATE_MEMORY(NJM*NEM,1,DPTYPE,ZC_PTR,MEM_INIT,
C     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NEM*USE_GRAPHICS,
     '    0,DPTYPE,ZC_PTR,MEM_INIT,ERROR,*9999)
C*** 19/02/08 JHC increased array size
C        CALL ALLOCATE_MEMORY(NDM*2*25,1,DPTYPE,Z_CONT_PTR,MEM_INIT,
C     '     ERROR,*9999)
        CALL ALLOCATE_MEMORY(NDM*2*67,1,DPTYPE,Z_CONT_PTR,MEM_INIT,
     '     ERROR,*9999)
        CALL ALLOCATE_MEMORY(NY_TRANSFER_M*NTSM*USE_TRANSFER*USE_TIME,
     '    0,DPTYPE,ZCROSSING_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NDM*USE_DATA,0,DPTYPE,ZD_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NDM*USE_DATA,0,DPTYPE,ZD2_PTR,
     '    MEM_INIT,ERROR,*9999)
C*** 28/02/08 JHC ZDD is used for contact mechanics
C                 So removed dependency of USED_GRAPHICS
C        CALL ALLOCATE_MEMORY(NJM*NDM*USE_DATA*USE_GRAPHICS,
C     '    0,DPTYPE,ZDD_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NJM*NDM*USE_DATA,
     '    0,DPTYPE,ZDD_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NDEM*USE_DATA,0,DPTYPE,ZDL_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NSM*NHM,1,DPTYPE,ZE_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NSM*NHM,1,DPTYPE,ZF_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NUM,1,DPTYPE,ZG_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(NHM*NUM,1,DPTYPE,ZG1_PTR,MEM_INIT,
     '    ERROR,*9999)
        CALL ALLOCATE_MEMORY(USE_VORONOI*NFVM,0,DPTYPE,ZNFV_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NKM*NVM*NHM*NPM*NCM,1,DPTYPE,ZP_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NKM*NVM*NHM*NPM*NCM*USE_NONLIN,0,DPTYPE,
     '    ZP1_PTR,MEM_INIT,ERROR,*9999)

C***    CHARACTER's
        CALL ALLOCATE_MEMORY(NQIM*NQVM*LEN_CELL_ICQS_NAMES*USE_CELL,0,
     '    CHARTYPE,CELL_ICQS_NAMES_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NQRM*NQVM*LEN_CELL_RCQS_NAMES*USE_CELL,0,
     '    CHARTYPE,CELL_RCQS_NAMES_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NIQSM*NQVM*LEN_CELL_YQS_NAMES*USE_CELL,0,
     '    CHARTYPE,CELL_YQS_NAMES_PTR,MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NTIMEVARSM*LEN_TIME_VARIABLE_NAMES,0,
     '    CHARTYPE,TIME_VARIABLE_NAMES_PTR,MEM_INIT,ERROR,*9999)

C***    LOGICAL's
        CALL ALLOCATE_MEMORY(NYM*NIYFIXM*NXM,NXM,LOGTYPE,FIX_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(2*NEM*USE_NONLIN,0,LOGTYPE,FIXP_PTR,
     '    MEM_INIT,ERROR,*9999)
        CALL ALLOCATE_MEMORY(NYQM*NIYFIXM*NXM*USE_GRID,0,LOGTYPE,
     '    FIXQ_PTR,MEM_INIT,ERROR,*9999)
C        CALL ALLOCATE_MEMORY(NZ_FNY_M,LOGTYPE,FNY_PTR,MEM_INIT,
C     '    ERROR,*9999)

        CALL FEMINI(%VAL(ISIZE_MFI_PTR),%VAL(ISIZE_PHI_PTR),
     '    %VAL(ISIZE_PHIH_PTR),%VAL(ISIZE_TBH_PTR),%VAL(LD_PTR),
     '    %VAL(NBJ_PTR),%VAL(NDIPOLES_PTR),%VAL(NEELEM_PTR),
     '    %VAL(NFFACE_PTR),%VAL(NHP_PTR),%VAL(NHQ_PTR),%VAL(NKH_PTR),
     '    %VAL(NLLINE_PTR),%VAL(NORD_PTR),%VAL(NPF_PTR),%VAL(NPNE_PTR),
     '    %VAL(NPNODE_PTR),%VAL(NQET_PTR),%VAL(NTIME_NR_PTR),
     &    %VAL(NVHP_PTR),%VAL(NVJP_PTR),%VAL(NWP_PTR),%VAL(NYNO_PTR),
     &    %VAL(NYNR_PTR),%VAL(CE_PTR),ERROR,*9999)

        IF(USE_GRAPHICS.NE.0) THEN
          CALL GKSINI(%VAL(ISALIG_PTR),%VAL(ISAXES_PTR),
     '      %VAL(ISBASE_PTR),%VAL(ISCLOC_PTR),
     '      %VAL(ISCONO_PTR),%VAL(ISCONT_PTR),%VAL(ISCROS_PTR),
     '      %VAL(ISDANO_PTR),%VAL(ISDAPR_PTR),%VAL(ISDATA_PTR),
     '      %VAL(ISDATR_PTR),%VAL(ISDIPA_PTR),%VAL(ISDIPO_PTR),
     '      ISEG,%VAL(ISELNO_PTR),%VAL(ISERR_PTR),
     '      %VAL(ISFACE_PTR),%VAL(ISFANO_PTR),%VAL(ISFIBR_PTR),
     '      %VAL(ISFIEL_PTR),%VAL(ISGAUS_PTR),%VAL(ISGRAD_PTR),
     '      %VAL(ISGRID_PTR),%VAL(ISHIST_PTR),
     '      %VAL(ISINCR_PTR),%VAL(ISISOC_PTR),%VAL(ISLEAD_PTR),
     '      %VAL(ISLINE_PTR),%VAL(ISLINO_PTR),%VAL(ISL2BE_PTR),
     '      %VAL(ISL3BE_PTR),%VAL(ISMAP_PTR),%VAL(ISMATE_PTR),
     '      %VAL(ISNONO_PTR),%VAL(ISN2BE_PTR),%VAL(ISN3BE_PTR),
     '      %VAL(ISOBJE_PTR),%VAL(ISPLIN_PTR),%VAL(ISPLOT_PTR),
     '      %VAL(ISPLOTXY_PTR),%VAL(ISPMAR_PTR),%VAL(ISPROF_PTR),
     '      %VAL(ISREAC_PTR),%VAL(ISRESI_PTR),%VAL(ISRULE_PTR),
     '      %VAL(ISSCAL_PTR),%VAL(ISSECT_PTR),%VAL(ISSHEE_PTR),
     '      %VAL(ISSTRA_PTR),%VAL(ISSTRE_PTR),
     '      %VAL(ISSTRM_PTR),%VAL(ISSURF_PTR),
     '      %VAL(ISVELO_PTR),CSEG,ERROR,*9999)
        ENDIF
        IF(FIRST_FEM) THEN
          FIRST_FEM=.FALSE.
          IF(NHM.NE.NJM) THEN
            WRITE(OP_STRING,'('' >>Note: NHM not equal to NJM'')')
            CALL WRITES(IOOP,OP_STRING,ERROR,*9999)
          ENDIF
        ENDIF

        REALLOCATE_FEM=.FALSE.
      ENDIF !first_fem or reallocate_fem

      CALL FEM_DYNAM(%VAL(CELL_ICQS_SPATIAL_PTR),
     '  %VAL(CELL_ICQS_VALUE_PTR),%VAL(CELL_RCQS_SPATIAL_PTR),
     '  %VAL(CELL_YQS_SPATIAL_PTR),%VAL(DIPOLE_CEN_NTIME_PTR),
     '  %VAL(DIPOLE_DIR_NTIME_PTR),%VAL(DIPOLE_LIST_PTR),%VAL(FD_PTR),
     '  %VAL(GRNGLIST_PTR),%VAL(IBT_PTR),%VAL(IICQS_SPATIAL_PTR),
     '  %VAL(IRCQS_SPATIAL_PTR),%VAL(ICQS_PTR),%VAL(ICQS_SPATIAL_PTR),
     '  %VAL(IDO_PTR),%VAL(ILPIN_PTR),%VAL(ILTIN_PTR),%VAL(INP_PTR),
     '  %VAL(ISC_GD_PTR),%VAL(ISC_GKK_PTR),%VAL(ISC_GM_PTR),
     '  %VAL(ISC_GMM_PTR),%VAL(ISR_GD_PTR),%VAL(ISR_GKK_PTR),
     '  %VAL(ISR_GM_PTR),%VAL(ISR_GMM_PTR),
     &  %VAL(ISIZE_MFI_PTR),%VAL(ISIZE_PHI_PTR),%VAL(ISIZE_PHIH_PTR),
     '  %VAL(ISIZE_TBH_PTR),%VAL(ITHRES_PTR),%VAL(LD_PTR),
     &  %VAL(LD_NP_PTR),%VAL(LDR_PTR),%VAL(LIST_PTR),%VAL(LGE_PTR),
     &  %VAL(LN_PTR),%VAL(MAP_ART_VEIN_PTR),%VAL(MXI_PTR),%VAL(NAN_PTR),
     &  %VAL(NBH_PTR),%VAL(NBHF_PTR),%VAL(NBJ_PTR),%VAL(NBJF_PTR),
     &  %VAL(NDADJ_PTR),%VAL(NDDATA_PTR),%VAL(NDDL_PTR),%VAL(NDET_PTR),
     &  %VAL(NDIPOLES_PTR),%VAL(NDLT_PTR),%VAL(NDP_PTR),
     &  %VAL(NEELEM_PTR),%VAL(NEL_PTR),%VAL(NELIST_PTR),
     &  %VAL(NELIST2_PTR),%VAL(NELIST3_PTR),%VAL(NENFVC_PTR),
     &  %VAL(NENP_PTR),%VAL(NENQ_PTR),%VAL(NEP_PTR),%VAL(NFF_PTR),
     &  %VAL(NFFACE_PTR),%VAL(NFLIST_PTR),%VAL(NFLIST1_PTR),
     &  %VAL(NFVC_PTR),%VAL(NGAP_PTR),%VAL(NGLIST_PTR),%VAL(NHE_PTR),
     &  %VAL(NHP_PTR),%VAL(NHQ_PTR),%VAL(NKB_PTR),%VAL(NKEF_PTR),
     &  %VAL(NKH_PTR),%VAL(NKHE_PTR),%VAL(NKJ_PTR),%VAL(NKJE_PTR),
     &  %VAL(NLCHOR_PTR),%VAL(NLF_PTR),%VAL(NLL_PTR),%VAL(NLLINE_PTR),
     &  %VAL(NLLIST_PTR),%VAL(NLNO_PTR),%VAL(NLQ_PTR),
     &  %VAL(NLS_NDATA_CONT_PTR),%VAL(NLS_NDATA_IMAG_PTR),
     &  %VAL(NMBIN_PTR),%VAL(NMNO_PTR),%VAL(NNB_PTR),%VAL(NNF_PTR),
     &  %VAL(NNL_PTR),%VAL(NODENVC_PTR),%VAL(NODENVCB_PTR),
     &  %VAL(NONL_PTR),%VAL(NONM_PTR),%VAL(NONY_PTR),%VAL(NORD_PTR),
     &  %VAL(NP1OPT_PTR),%VAL(NP2OPT_PTR),%VAL(NP3OPT_PTR),
     &  %VAL(NPB_PTR),%VAL(NPF_PTR),%VAL(NPINTER_PTR),
     &  %VAL(NP_INTERFACE_PTR),%VAL(NPL_PTR),%VAL(NPLIST1_PTR),
     &  %VAL(NPLIST2_PTR),%VAL(NPLIST3_PTR),%VAL(NPLIST4_PTR),
     &  %VAL(NPLIST5_PTR),%VAL(NPNE_PTR),%VAL(NPNF_PTR),
     &  %VAL(NPNODE_PTR),%VAL(NPNY_PTR),%VAL(NPQ_PTR),%VAL(NQET_PTR),
     &  %VAL(NQGP_PTR),%VAL(NQGP_PIVOT_PTR),%VAL(NQLIST_PTR),
     &  %VAL(NQNP_PTR),%VAL(NQNY_PTR),%VAL(NQSCNB_PTR),%VAL(NQXI_PTR),
     &  %VAL(NRE_PTR),%VAL(NRLIST_PTR),%VAL(NRLIST2_PTR),%VAL(NSB_PTR),
     &  %VAL(NTCOVA_PTR),%VAL(NTIME_INTERP_PTR),%VAL(NTIME_POINTS_PTR),
     &  %VAL(NTIME_NR_PTR),%VAL(NUNK_PTR),%VAL(NVCB_PTR),
     &  %VAL(NVCNODE_PTR),%VAL(NVCNP_PTR),%VAL(NVHE_PTR),%VAL(NVHF_PTR),
     &  %VAL(NVHP_PTR),%VAL(NVJE_PTR),%VAL(NVJF_PTR),%VAL(NVJL_PTR),
     &  %VAL(NVJP_PTR),%VAL(NAQ_PTR),%VAL(NW_PTR),%VAL(NWP_PTR),
     &  %VAL(NWQ_PTR),%VAL(NXI_PTR),%VAL(NXLIST_PTR),%VAL(NXQ_PTR),
     &  %VAL(NYNE_PTR),%VAL(NYNO_PTR),%VAL(NYNP_PTR),%VAL(NYNQ_PTR),
     &  %VAL(NYNR_PTR),%VAL(NYNY_PTR),%VAL(NYQNR_PTR),%VAL(PAOPTY_PTR),
     &  %VAL(IPIVOT_PTR),%VAL(TV_BC_SET_PTR),%VAL(VOLTC_PTR),
     &  %VAL(Z_CONT_LIST_PTR),%VAL(ACINUS_PTR),%VAL(AQ_PTR),
     &  %VAL(BBM_PTR),%VAL(CE_PTR),
     &  %VAL(CELL_CP_PTR),%VAL(CELL_RCQS_VALUE_PTR),
     &  %VAL(CELL_YQS_VALUE_PTR),%VAL(CG_PTR),%VAL(CGE_PTR),
     &  %VAL(CIN_PTR),%VAL(CONY_PTR),%VAL(COVA_PTR),%VAL(CP_PTR),
     &  %VAL(CQ_PTR),%VAL(CURVCORRECT_PTR),%VAL(CYNO_PTR),
     &  %VAL(CYNY_PTR),%VAL(DET_PTR),%VAL(DF_PTR),%VAL(DIPOLE_CEN_PTR),
     &  %VAL(DIPOLE_DIR_PTR),%VAL(DL_PTR),%VAL(DLL_PTR),%VAL(DRDN_PTR),
     &  %VAL(DRDNO_PTR),%VAL(D_RE_PTR),%VAL(D_RI3_PTR),%VAL(D_RP_PTR),
     &  %VAL(D_TG_PTR),%VAL(D_ZG_PTR),%VAL(DXDXIQ_PTR),
     &  %VAL(DXDXIQ2_PTR),%VAL(DNUDXQ_PTR),%VAL(ED_PTR),%VAL(EDD_PTR),
     &  %VAL(EIGVAL_PTR),%VAL(EIGVEC_PTR),%VAL(EM_PTR),%VAL(ER_PTR),
     &  %VAL(ES_PTR),%VAL(FEXT_PTR),%VAL(GCHQ_PTR),%VAL(GD_PTR),
     &  %VAL(GKK_PTR),%VAL(GM_PTR),%VAL(GMM_PTR),%VAL(GRR_PTR),
     &  %VAL(GR_PTR),%VAL(GUQ_PTR),%VAL(LAPL_PTR),%VAL(LAPLSQR_PTR),
     &  %VAL(MFI_PTR),%VAL(NEERR_PTR),%VAL(NLS_SURF_XI_PTR),
     &  %VAL(NLS_SURF_PSI_PTR),%VAL(NQGW_PTR),%VAL(PE_PTR),%VAL(PF_PTR),
     &  %VAL(PG_PTR),%VAL(PGNQE_PTR),%VAL(PHI_PTR),%VAL(PHI_H_PTR),
     &  %VAL(PHI_H_EXACT_PTR),%VAL(PROPQ_PTR),%VAL(RAD_PTR),
     &  %VAL(RCQS_PTR),%VAL(RCQS_SPATIAL_PTR),%VAL(RD_PTR),
     &  %VAL(RE1_PTR),%VAL(RE2_PTR),%VAL(REG_PARAMETER_PTR),
     &  %VAL(RG_PTR),%VAL(RHS_PTR),%VAL(SE_PTR),%VAL(SF_PTR),
     &  %VAL(SP_PTR),%VAL(SIGMA_PHI_PTR),%VAL(SIGMA_T_BH_PTR),
     &  %VAL(SQ_PTR),%VAL(T_BH_PTR),%VAL(T_BH_INV_PTR),%VAL(THRES_PTR),
     &  %VAL(TIME_VALUES_PTR),%VAL(U_PHI_PTR),%VAL(U_T_BH_PTR),
     &  %VAL(VC_PTR),%VAL(VC_INIT_PTR),%VAL(VOL_PTR),%VAL(VOLT_PTR),
     &  %VAL(VT_PHI_PTR),%VAL(VT_T_BH_PTR),%VAL(WD_PTR),%VAL(WDL_PTR),
     &  %VAL(WG_PTR),%VAL(WK1_INV_PTR),%VAL(WK2_INV_PTR),
     &  %VAL(WK3_INV_PTR),%VAL(WK4_INV_PTR),%VAL(WK5_INV_PTR),
     &  %VAL(WU_PTR),%VAL(XA_PTR),%VAL(XAB_PTR),%VAL(XB_PTR),
     &  %VAL(XE_PTR),%VAL(XG_PTR),%VAL(XG1_PTR),%VAL(XID_PTR),
     &  %VAL(XIDL_PTR),%VAL(XIG_PTR),%VAL(XIP_PTR),%VAL(XIQ_PTR),
     &  %VAL(XN_PTR),%VAL(XN_GRAD_PTR),%VAL(XNFV_PTR),%VAL(XO_PTR),
     &  %VAL(XP_PTR),%VAL(XR_PTR),%VAL(XR_GRAD_PTR),%VAL(YD_PTR),
     &  %VAL(XQ_PTR),%VAL(YG_PTR),%VAL(YGF_PTR),%VAL(YP_PTR),
     &  %VAL(YQ_PTR),%VAL(YQS_PTR),%VAL(ZA_PTR),%VAL(ZA1_PTR),
     &  %VAL(ZC_PTR),%VAL(Z_CONT_PTR),%VAL(ZCROSSING_PTR),%VAL(ZD_PTR),
     &  %VAL(ZD2_PTR),%VAL(ZDD_PTR),%VAL(ZDL_PTR),%VAL(ZE_PTR),
     &  %VAL(ZF_PTR),%VAL(ZG_PTR),%VAL(ZG1_PTR),%VAL(ZNFV_PTR),
     &  %VAL(ZP_PTR),%VAL(ZP1_PTR),%VAL(FIX_PTR),%VAL(FIXP_PTR),
     &  %VAL(FIXQ_PTR),ISEG,%VAL(CELL_ICQS_NAMES_PTR),
     &  %VAL(CELL_RCQS_NAMES_PTR),%VAL(CELL_YQS_NAMES_PTR),
     &  %VAL(TIME_VARIABLE_NAMES_PTR),CSEG,END,STRING,INTWORK,REALWORK,
     &  ERROR,%VAL(LEN_CELL_ICQS_NAMES),%VAL(LEN_CELL_RCQS_NAMES),
     &  %VAL(LEN_CELL_YQS_NAMES),%VAL(LEN_TIME_VARIABLE_NAMES),*9999)

C *** DPN 17 July 1999 - The strings CELL_ICQS_NAMES_PTR,
C *** CELL_RCQS_NAMES_PTR, and CELL_YQS_NAMES_PTR must be the first
C *** character variables passed through!!!!

      CALL EXITS('FEM')
      RETURN
 9999 CALL ERRORS('FEM',ERROR)
      CALL EXITS('FEM')
      RETURN 1
      END


